// SSMClient: Solid Solutions
// Version: 2.0.0

const ReportDatabase =    
{
    ProjectData: {
        IsCompleted: false,
        CompletedDate: "0",
        ProjectName: "«ProjectName»",
        Name: "«Name»",
        AssemblyName: "«AssemblyName»",
        SourceName: "«Path»-«Configuration»",
        Description: "«ProjectDescription»",
        Configuration: "«Configuration»",
        ProjectPath: "«Path»",
        ID: "«ID»",
        serverID: "",
        guid: "«GUID»",
        FrameCount: 0,
        SubFrameCount: 0,
        PanelCount: 0,
        ProgramCount: 0,
        HardwareCount: 0,
        SheetCount: 0,
        NestedPanelCount: 0,
        SummaryAuthor: "«SummaryAuthor»",
        SummaryKeywords: "«SummaryKeywords»",
        SummaryTitle: "«SummaryTitle»",
        SummarySubject: "«SummarySubject»",
        Date: "",
        Time: "",
        DateTime: "",
        CreatedDate: "«CreatedDate»",
        LastSavedDate: "«LastSavedDate»",
        Username: "",
        LastSavedBy: "«LastSavedBy»",
        ProjectQuantity: «ProjectQuantity»,
        Weigth: «MASS»,
        ProjectWeight: "«ProjectWeight»",
        Currency: "«REPORTCURRENCYSYMBOL»",
        ItemLink: "«REPORTPATH»\\«Home.DOC_REPORTRELATIVEURI»",
        Image: "«IMGREPORT.DOC_REPORTRELATIVEURI»",
        ImageAbsoluteURI: "«IMGREPORT.DOC_ABSOLUTEURI»",
        ImageExists: Boolean(«IMGREPORT.DOC_FILEEXISTS»),
        Model: "«BABYLON_PROJECT.DOC_REPORTRELATIVEURI»",
        ModelAbsoluteURI: "«BABYLON_PROJECT.DOC_ABSOLUTEURI»",
        ModelExists: Boolean(«BABYLON_PROJECT.DOC_FILEEXISTS»),
        SWModelType: «SWMODELTYPE»,
        CreatedBy: "«CreatedBy»",
        Revision: "«Revision»",
        Customer: "«Customer»",
        Client: "«Client»",
        OrderNumber: "«OrderNumber»",
        ProjectComments: <!--BLOC FORCEDENCODINGTYPE=2 -->"«ProjectComments»"<!--/BLOC-->,
        ProjectCommentsCP: <!--BLOC FORCEDENCODINGTYPE=2 -->"«ProjectCommentsCP»"<!--/BLOC-->,
        PDFPath: "«PDF_PROJECT.DOC_PATH»",
        PDFAbsoluteURI: "«PDF_PROJECT.DOC_ABSOLUTEURI»",
        PDFRelativePath: "«PDF_PROJECT.DOC_REPORTRELATIVEURI»",
        PDFExists: Boolean(«PDF_PROJECT.DOC_FILEEXISTS»),
        NestingOffcutAreaRatio: «NESTING_OFFCUTS_AREA_RATIO»,
        NestingScrapsAreaRatio: «NESTING_SCRAPS_AREA_RATIO»,
        NestingWasteAreaRatio: «NESTING_WASTE_AREA_RATIO»,
        // Project Custom Properties
        Project_STR_1: "«Project_STR_1»",
        Project_STR_2: "«Project_STR_2»",
        Project_STR_3: "«Project_STR_3»",
        Project_STR_4: "«Project_STR_4»",
        Project_STR_5: "«Project_STR_5»",
        Project_STR_6: "«Project_STR_6»",
        Project_STR_7: "«Project_STR_7»",
        Project_STR_8: "«Project_STR_8»",
        Project_STR_9: "«Project_STR_9»",
        Project_STR_10: "«Project_STR_10»",
        Project_BOO_1: Boolean(«Project_BOO_1»),
        Project_BOO_2: Boolean(«Project_BOO_2»),
        Project_BOO_3: Boolean(«Project_BOO_3»),
        Project_BOO_4: Boolean(«Project_BOO_4»),
        Project_BOO_5: Boolean(«Project_BOO_5»),
        Project_REA_1: «Project_REA_1»,
        Project_REA_2: «Project_REA_2»,
        Project_REA_3: «Project_REA_3»,
        Project_REA_4: «Project_REA_4»,
        Project_REA_5: «Project_REA_5»,
        Project_DIM_1: «Project_DIM_1»,
        Project_DIM_2: «Project_DIM_2»,
        Project_DIM_3: «Project_DIM_3»,
        Project_DIM_4: «Project_DIM_4»,
        Project_DIM_5: «Project_DIM_5»,
        Project_INT_1: «Project_INT_1»,
        Project_INT_2: «Project_INT_2»,
        Project_INT_3: «Project_INT_3»,
        Project_INT_4: «Project_INT_4»,
        Project_INT_5: «Project_INT_5»,
    },
    
    ReportData: {
        guid: "",
        ReportTier: 0,
        ReportVersion: "«ReportVersion»",
        SwoodVersion: "«REPORT_VERSION»",
        ReportRunTime: 0,
        ReportDirectory: "«REPORTPATH»",
        DatabasePath: "«DATABASE.DOC_PATH»",
        ReportCFGDirectory: "«REPORTCFGDIR»",
        ReportCFGPath: "«REPORTCFGPATH»",
        ResourcesPath: "«ResourcesPath»",
        ProjectsDirectory: "«ProjectsDirectory»",
        ProjectsPath: "«Projects.DOC_PATH»",
        Server: Boolean(«SwoodServer»),
        ServerPath: "«SwoodServerPath»",
        ServerHost: "«SwoodServerHost»",
        ServerPort: «SwoodServerPort»,
        SwoodDesign: Boolean(«REPORT_ISUSINGDESIGN»),
        SwoodCam:  Boolean(«REPORT_ISUSINGCAM»),
        SwoodNesting:  Boolean(«REPORT_ISNESTINGPROJECT»),
        SwoodServer:  Boolean(«SwoodServer»),
        ResourcesRelative:  Boolean(«ResourcesRelative»),
        SimpleReport: Boolean(«SimpleReport»),
        ProgramOffcutsUsed: Boolean(«MODULE_PROGRAMOFFCUTS_ISACTIVE»),
    },

    TopLevelData: {<!--BLOCTOPLEVEL LOOPON=TYPEDOBJECT LOOPONCONDITION=((TOTYPES)CONTAINS"TOPLEVEL")AND(NOT(Exclude)) REPEAT=0 -->
        ProjectName: "«TO_TOPLEVEL.ProjectName»",
        AssemblyName: "«Name»",
        Customer: "«TO_TOPLEVEL.Customer»",
        Client: "«TO_TOPLEVEL.Client»",
        OrderNumber: "«TO_TOPLEVEL.OrderNumber»",
        CreatedBy: "«TO_TOPLEVEL.CreatedBy»",
        ProjectQuantity: "«TO_TOPLEVEL.ProjectQuantity»",
        ProjectWeight: "«TO_TOPLEVEL.ProjectWeight»",
        Image: "«IMGTOPLEVEL.DOC_REPORTRELATIVEURI»",
        ImageAbsoluteURI: "«IMGTOPLEVEL.DOC_ABSOLUTEURI»",
        ImageExists: Boolean(«IMGTOPLEVEL.DOC_FILEEXISTS»),
        // Project Custom Properties
        TopLevel_STR_1: "«TopLevel_STR_1»",
        TopLevel_STR_2: "«TopLevel_STR_2»",
        TopLevel_STR_3: "«TopLevel_STR_3»",
        TopLevel_STR_4: "«TopLevel_STR_4»",
        TopLevel_STR_5: "«TopLevel_STR_5»",
        TopLevel_STR_6: "«TopLevel_STR_6»",
        TopLevel_STR_7: "«TopLevel_STR_7»",
        TopLevel_STR_8: "«TopLevel_STR_8»",
        TopLevel_STR_9: "«TopLevel_STR_9»",
        TopLevel_STR_10: "«TopLevel_STR_10»",
        TopLevel_BOO_1: Boolean(«TopLevel_BOO_1»),
        TopLevel_BOO_2: Boolean(«TopLevel_BOO_2»),
        TopLevel_BOO_3: Boolean(«TopLevel_BOO_3»),
        TopLevel_BOO_4: Boolean(«TopLevel_BOO_4»),
        TopLevel_BOO_5: Boolean(«TopLevel_BOO_5»),
        TopLevel_REA_1: «TopLevel_REA_1»,
        TopLevel_REA_2: «TopLevel_REA_2»,
        TopLevel_REA_3: «TopLevel_REA_3»,
        TopLevel_REA_4: «TopLevel_REA_4»,
        TopLevel_REA_5: «TopLevel_REA_5»,
        TopLevel_DIM_1: «TopLevel_DIM_1»,
        TopLevel_DIM_2: «TopLevel_DIM_2»,
        TopLevel_DIM_3: «TopLevel_DIM_3»,
        TopLevel_DIM_4: «TopLevel_DIM_4»,
        TopLevel_DIM_5: «TopLevel_DIM_5»,
        TopLevel_INT_1: «TopLevel_INT_1»,
        TopLevel_INT_2: «TopLevel_INT_2»,
        TopLevel_INT_3: «TopLevel_INT_3»,
        TopLevel_INT_4: «TopLevel_INT_4»,
        TopLevel_INT_5: «TopLevel_INT_5»,
    <!--/BLOCTOPLEVEL-->},

    RoomData: [
    <!--BLOCROOM LOOPON=ASSEMBLY LOOPONCONDITION=((TOTYPES)CONTAINS"ROOM")AND(NOT(Exclude)) REPEAT=-1 ORDERBY=Name -->
        {
            DataType: "Room",
            IsCompleted: false,
            SourceName: "«Name»-«Configuration»",
            guid: "«GUID»",
            Filepath: "«Path»",
            Name: "«Name»",
            Room: "«Room»",
            Description: "«Description»",
            Configuration: "«Configuration»",
            Height: «Height»,
            Width: «Width»,
            Depth: «Depth»,
            Quantity: «NB»,
            Weight: "«Weight»",
            IsExcluded: Boolean(«Exclude»),
            LabourCosts: «LabourCosts»,
            Comments: <!--BLOC FORCEDENCODINGTYPE=2 -->"«Comments»"<!--/BLOC-->,
            CommentsCP: <!--BLOC FORCEDENCODINGTYPE=2 -->"«CommentsCP»"<!--/BLOC-->,
            // Assembly Custom Properties
            Assembly_STR_1: "«Assembly_STR_1»",
            Assembly_STR_2: "«Assembly_STR_2»",
            Assembly_STR_3: "«Assembly_STR_3»",
            Assembly_STR_4: "«Assembly_STR_4»",
            Assembly_STR_5: "«Assembly_STR_5»",
            Assembly_STR_6: "«Assembly_STR_6»",
            Assembly_STR_7: "«Assembly_STR_7»",
            Assembly_STR_8: "«Assembly_STR_8»",
            Assembly_STR_9: "«Assembly_STR_9»",
            Assembly_STR_10: "«Assembly_STR_10»",
            Assembly_BOO_1: Boolean(«Assembly_BOO_1»),
            Assembly_BOO_2: Boolean(«Assembly_BOO_2»),
            Assembly_BOO_3: Boolean(«Assembly_BOO_3»),
            Assembly_BOO_4: Boolean(«Assembly_BOO_4»),
            Assembly_BOO_5: Boolean(«Assembly_BOO_5»),
            Assembly_REA_1: «Assembly_REA_1»,
            Assembly_REA_2: «Assembly_REA_2»,
            Assembly_REA_3: «Assembly_REA_3»,
            Assembly_REA_4: «Assembly_REA_4»,
            Assembly_REA_5: «Assembly_REA_5»,
            Assembly_DIM_1: «Assembly_DIM_1»,
            Assembly_DIM_2: «Assembly_DIM_2»,
            Assembly_DIM_3: «Assembly_DIM_3»,
            Assembly_DIM_4: «Assembly_DIM_4»,
            Assembly_DIM_5: «Assembly_DIM_5»,
            Assembly_INT_1: «Assembly_INT_1»,
            Assembly_INT_2: «Assembly_INT_2»,
            Assembly_INT_3: «Assembly_INT_3»,
            Assembly_INT_4: «Assembly_INT_4»,
            Assembly_INT_5: «Assembly_INT_5»,
        },
    <!--/BLOCROOM-->],
        
    FrameData: [
    <!--BLOCFRAME LOOPON=ASSEMBLY LOOPONCONDITION=((TOTYPES)CONTAINS"FRAME")AND(NOT((TOTYPES)CONTAINS"SUBFRAME"))AND(NOT(Exclude)) REPEAT=-1 ORDERBY=Name -->
        {
            DataType: "Frame",
            IsCompleted: false,
            SourceName: "«Name»-«Configuration»",
            ParentRoomSourceName: "«ParentRoom»",
            ParentRoom: "«ParentRoom»",
            ParentRoomConfiguration: "«ParentRoomConfiguration»",
            ParentRoomName: "«ParentRoomName»",
            ID: "«ID»",
            guid: "«GUID»",
            Filepath: "«Path»",
            SWFrameID: "«FrameID»",
            SwoodID: "«NUM_FRAME»",
            Name: "«Name»",
            Description: "«Description»",
            Configuration: "«Configuration»",
            Height: «Height»,
            Width: «Width»,
            Depth: «Depth»,
            Quantity: «NB»,
            Weight: "«Weight»",
            IsExcluded: Boolean(«Exclude»),
            LabourCosts: «LabourCosts»,
            Comments: <!--BLOC FORCEDENCODINGTYPE=2 -->"«Comments»"<!--/BLOC-->,
            CommentsCP: <!--BLOC FORCEDENCODINGTYPE=2 -->"«CommentsCP»"<!--/BLOC-->,
            Image: "«IMGFRAME.DOC_REPORTRELATIVEURI»",
            ImageAbsoluteURI: "«IMGFRAME.DOC_ABSOLUTEURI»",
            ImageExists: Boolean(«IMGFRAME.DOC_FILEEXISTS»),
            ItemLink: "«WEB_FRAME_DETAILS.DOC_REPORTRELATIVEURI»?Name=" + encodeURIComponent("«Name»-«Configuration»") + "&Image=" + encodeURIComponent("«IMGFRAME.DOC_REPORTRELATIVEURI»") + "&Model=Model_«Name»-«Configuration».js",
            PDFPath: "«PDF_FRAMES.DOC_PATH»",
            PDFAbsoluteURI: "«PDF_FRAMES.DOC_ABSOLUTEURI»",
            PDFRelativePath: "«PDF_FRAMES.DOC_REPORTRELATIVEURI»",
            PDFExists: Boolean(«PDF_FRAMES.DOC_FILEEXISTS»),
            FrameType: "«FrameType»",
            // Assembly Custom Properties
            Assembly_STR_1: "«Assembly_STR_1»",
            Assembly_STR_2: "«Assembly_STR_2»",
            Assembly_STR_3: "«Assembly_STR_3»",
            Assembly_STR_4: "«Assembly_STR_4»",
            Assembly_STR_5: "«Assembly_STR_5»",
            Assembly_STR_6: "«Assembly_STR_6»",
            Assembly_STR_7: "«Assembly_STR_7»",
            Assembly_STR_8: "«Assembly_STR_8»",
            Assembly_STR_9: "«Assembly_STR_9»",
            Assembly_STR_10: "«Assembly_STR_10»",
            Assembly_BOO_1: Boolean(«Assembly_BOO_1»),
            Assembly_BOO_2: Boolean(«Assembly_BOO_2»),
            Assembly_BOO_3: Boolean(«Assembly_BOO_3»),
            Assembly_BOO_4: Boolean(«Assembly_BOO_4»),
            Assembly_BOO_5: Boolean(«Assembly_BOO_5»),
            Assembly_REA_1: «Assembly_REA_1»,
            Assembly_REA_2: «Assembly_REA_2»,
            Assembly_REA_3: «Assembly_REA_3»,
            Assembly_REA_4: «Assembly_REA_4»,
            Assembly_REA_5: «Assembly_REA_5»,
            Assembly_DIM_1: «Assembly_DIM_1»,
            Assembly_DIM_2: «Assembly_DIM_2»,
            Assembly_DIM_3: «Assembly_DIM_3»,
            Assembly_DIM_4: «Assembly_DIM_4»,
            Assembly_DIM_5: «Assembly_DIM_5»,
            Assembly_INT_1: «Assembly_INT_1»,
            Assembly_INT_2: «Assembly_INT_2»,
            Assembly_INT_3: «Assembly_INT_3»,
            Assembly_INT_4: «Assembly_INT_4»,
            Assembly_INT_5: «Assembly_INT_5»,
            Panels: [
            <!--BLOCPANEL LOOPON=PANEL LOOPONCONDITION=NOT(Exclude)AND(NOT((TOTYPES)CONTAINS"HARDWARE")) REPEAT=-1 ORDERBY= PAN_TWL|MAT|PAN_STL|PAN_STW -->
                {
                    SourceName: "«Name»-«Configuration»", 
                    Quantity: «REFCOUNT»,
                },
            <!--/BLOCPANEL-->
            ],
            Weldments: [
            <!--BLOCMULTIBODYPART LOOPON=PART LOOPONCONDITION=(MULTIBODYPART)AND(NOT((TOTYPES)CONTAINS"HARDWARE"))AND(NOT(Exclude)) REPEAT=-1 ORDERBY=-Name --> 
                {
                    SourceName: "«Name»-«Configuration»",
                    Quantity: «REFCOUNT»,
                    Bodies:[
                    <!--BLOCMULTIBODYSUB LOOPON=STOCK LOOPONCONDITION=(NOT(UCASE(ST_N)CONTAINS"LAYER")) REPEAT=-1 ORDERBY=-Name -->
                        {
                            SourceName: "«Name»-«MBS_Cutlist»-«ST_N»-«Configuration»",
                            IsWeldmentMaterial: Boolean(«ST_MATO.Weldment»),
                        },
                    <!--/BLOCMULTIBODYSUB--> 
                    ],
                },
            <!--/BLOCMULTIBODYPART-->
            ],
            Hardware: [
            <!--BLOCHARDWARE LOOPON=TYPEDOBJECT LOOPONCONDITION=((TOTYPES)CONTAINS"HARDWARE")AND(NOT(Exclude)) REPEAT=-1 -->
                {
                    SourceName: "«Name»-«Configuration»",
                    Quantity: «REFCOUNT»,
                },
            <!--/BLOCHARDWARE-->
            ],
        },
    <!--/BLOCFRAME--> 

    <!--BLOCMBFRAME LOOPON=PART LOOPONCONDITION=(MULTIBODYPART)AND(Frame)AND(NOT(Exclude)) REPEAT=-1 ORDERBY= Name -->
        {
            SwoodID: "«NUM_FRAME»",
            Name: "«Name»",
            SourceName: "«Name»-«Configuration»",
            Height: «Height»,
            Width: «Width»,
            Depth: «Depth»,
            Quantity: «NB»,
            Weigth: «MASS»,
            IsExcluded: Boolean(«Exclude»),
            Comments: <!--BLOC FORCEDENCODINGTYPE=2 -->"«Comments»"<!--/BLOC-->,
            Image: <!--BLOCROW LOOPON=STOCK LOOPONCONDITION=(MULTIBODYPART) REPEAT=1 -->"«IMGMULTIBODYPART.DOC_REPORTRELATIVEURI»"<!--/BLOCROW-->,
            ItemLink: "«WEB_FRAME_DETAILS.DOC_REPORTRELATIVEURI»?Name=" + encodeURIComponent("«Name»-«Configuration»") + "&Image=" + <!--BLOCROW LOOPON=STOCK LOOPONCONDITION=(MULTIBODYPART) REPEAT=1 -->encodeURIComponent("«IMGMULTIBODYPART.DOC_REPORTRELATIVEURI»")<!--/BLOCROW-->,
            FrameType: "«FrameType»",
            Panels: [
            <!--BLOCROW LOOPON=STOCK LOOPONCONDITION=(MULTIBODYPART) REPEAT=-1 ORDERBY= -ST_T|ST_MATO.MAT_NAME|-ST_L|-ST_W -->
                {
                    SourceName: "«Name»-«MBS_Cutlist»-«ST_N»-«Configuration»",
                    Quantity: 1,
                },
            <!--/BLOCROW-->
            ]
        },
    <!--/BLOCMBFRAME-->],

    SubFrameData: [
    <!--BLOCSUBFRAME LOOPON=ASSEMBLY LOOPONCONDITION=((TOTYPES)CONTAINS"SUBFRAME")AND(NOT(Exclude)) REPEAT=-1 ORDERBY=Name -->
        {
            IsCompleted: false,
            SourceName: "«Name»-«Configuration»",
            ParentRoomSourceName: "«ParentRoom»",
            ParentRoom: "«ParentRoom»",
            ParentRoomConfiguration: "«ParentRoomConfiguration»",
            ParentRoomName: "«ParentRoomName»",
            ParentFrame: "«ParentFrame»",
            ParentDescription: "«ParentDescription»",
            ParentSubFrame: "«ParentSubFrame»",
            ID: "«ID»",
            guid: "«GUID»",
            Filepath: "«Path»",
            SWFrameID: "«FrameID»",
            SwoodID: "«NUM_SUBFRAME»",
            Name: "«Name»",
            Description: "«Description»",
            Configuration: "«Configuration»",
            Height: «Height»,
            Width: «Width»,
            Depth: «Depth»,
            Quantity: «NB»,
            Weight: "«Weight»",
            IsExcluded: Boolean(«Exclude»),
            LabourCosts: «LabourCosts»,
            Comments: <!--BLOC FORCEDENCODINGTYPE=2 -->"«Comments»"<!--/BLOC-->,
            CommentsCP: <!--BLOC FORCEDENCODINGTYPE = 2 --> "«CommentsCP»" <!--/BLOC-->,
            Image: "«IMGSUBFRAME.DOC_REPORTRELATIVEURI»",
            ImageAbsoluteURI: "«IMGSUBFRAME.DOC_ABSOLUTEURI»",
            ImageExists: Boolean(«IMGSUBFRAME.DOC_FILEEXISTS»),
            ItemLink: "«WEB_SUBFRAME_DETAILS.DOC_REPORTRELATIVEURI»?Name=" + encodeURIComponent("«Name»-«Configuration»") + "&Image=" + encodeURIComponent("«IMGSUBFRAME.DOC_REPORTRELATIVEURI»") + "&Model=Model_«Name»-«Configuration».js",
            FrameType: "«FrameType»",
            // Assembly Custom Properties
            Assembly_STR_1: "«Assembly_STR_1»",
            Assembly_STR_2: "«Assembly_STR_2»",
            Assembly_STR_3: "«Assembly_STR_3»",
            Assembly_STR_4: "«Assembly_STR_4»",
            Assembly_STR_5: "«Assembly_STR_5»",
            Assembly_STR_6: "«Assembly_STR_6»",
            Assembly_STR_7: "«Assembly_STR_7»",
            Assembly_STR_8: "«Assembly_STR_8»",
            Assembly_STR_9: "«Assembly_STR_9»",
            Assembly_STR_10: "«Assembly_STR_10»",
            Assembly_BOO_1: Boolean(«Assembly_BOO_1»),
            Assembly_BOO_2: Boolean(«Assembly_BOO_2»),
            Assembly_BOO_3: Boolean(«Assembly_BOO_3»),
            Assembly_BOO_4: Boolean(«Assembly_BOO_4»),
            Assembly_BOO_5: Boolean(«Assembly_BOO_5»),
            Assembly_REA_1: «Assembly_REA_1»,
            Assembly_REA_2: «Assembly_REA_2»,
            Assembly_REA_3: «Assembly_REA_3»,
            Assembly_REA_4: «Assembly_REA_4»,
            Assembly_REA_5: «Assembly_REA_5»,
            Assembly_DIM_1: «Assembly_DIM_1»,
            Assembly_DIM_2: «Assembly_DIM_2»,
            Assembly_DIM_3: «Assembly_DIM_3»,
            Assembly_DIM_4: «Assembly_DIM_4»,
            Assembly_DIM_5: «Assembly_DIM_5»,
            Assembly_INT_1: «Assembly_INT_1»,
            Assembly_INT_2: «Assembly_INT_2»,
            Assembly_INT_3: «Assembly_INT_3»,
            Assembly_INT_4: «Assembly_INT_4»,
            Assembly_INT_5: «Assembly_INT_5»,
            Panels: [
            <!--BLOCPANEL LOOPON=PANEL LOOPONCONDITION=NOT(Exclude)AND(NOT((TOTYPES)CONTAINS"HARDWARE")) REPEAT=-1 ORDERBY= PAN_TWL|MAT|PAN_STL|PAN_STW -->
                {
                    SourceName: "«Name»-«Configuration»", 
                    Quantity: «REFCOUNT»,
                },
            <!--/BLOCPANEL-->
            ],
            Weldments: [
            <!--BLOCMULTIBODYPART LOOPON=PART LOOPONCONDITION=(MULTIBODYPART)AND(NOT((TOTYPES)CONTAINS"HARDWARE"))AND(NOT(Exclude)) REPEAT=-1 ORDERBY=-Name --> 
                {
                    SourceName: "«Name»-«Configuration»",
                    Quantity: «REFCOUNT»,
                    Bodies:[
                    <!--BLOCMULTIBODYSUB LOOPON=STOCK LOOPONCONDITION=(NOT(UCASE(ST_N)CONTAINS"LAYER")) REPEAT=-1 ORDERBY=-Name -->
                        {
                            SourceName: "«Name»-«MBS_Cutlist»-«ST_N»-«Configuration»",
                            IsWeldmentMaterial: Boolean(«ST_MATO.Weldment»),
                        },
                    <!--/BLOCMULTIBODYSUB--> 
                    ],
                },
            <!--/BLOCMULTIBODYPART-->
            ],
            Hardware: [
            <!--BLOCHARDWARE LOOPON=TYPEDOBJECT LOOPONCONDITION=((TOTYPES)CONTAINS"HARDWARE")AND(NOT(Exclude)) REPEAT=-1 -->
                {
                    SourceName: "«Name»-«Configuration»",
                    Quantity: «REFCOUNT»,
                },
            <!--/BLOCHARDWARE-->
            ],
        },
    <!--/BLOCSUBFRAME--> 

    <!--BLOCMBSUBFRAME LOOPON=PART LOOPONCONDITION=(MULTIBODYPART)AND(SubFrame)AND(NOT(Exclude)) REPEAT=-1 ORDERBY= Name -->
        {
            SwoodID: "«NUM_SUBFRAME»",
            Name: "«Name»",
            SourceName: "«Name»-«Configuration»",
            ParentRoomSourceName: "«ParentRoom»",
            ParentRoom: "«ParentRoom»",
            ParentRoomConfiguration: "«ParentRoomConfiguration»",
            ParentRoomName: "«ParentRoomName»",
            ParentFrame: "«ParentFrame»",
            ParentDescription: "«ParentDescription»",
            Height: «Height»,
            Width: «Width»,
            Depth: «Depth»,
            Quantity: «NB»,
            Weigth: «MASS»,
            IsExcluded: Boolean(«Exclude»),
            Comments: < !--BLOC FORCEDENCODINGTYPE = 2 -- > "«Comments»" < !--/BLOC-->,
            FrameType: "«FrameType»",
            Panels: [
            <!--BLOCROW LOOPON=STOCK LOOPONCONDITION=(MULTIBODYPART) REPEAT=-1 ORDERBY= -ST_T|ST_MATO.MAT_NAME|-ST_L|-ST_W -->
                {
                    SourceName: "«Name»-«MBS_Cutlist»-«ST_N»-«Configuration»",
                    Quantity: 1,
                },
            <!--/BLOCROW-->
            ]
        },
    <!--/BLOCMBSUBFRAME-->],

    PanelData: [
    <!--BLOCPANEL LOOPON=PANEL REPEAT=-1 LOOPONCONDITION=NOT((TOTYPES)CONTAINS"HARDWARE")AND(PAN_CORESTOCK.ST_MATO)AND(NOT(Exclude)) ORDERBY=-Name-->
        {
            DataType: "Panel",
            IsCompleted: false,
            SourceName: "«Name»-«Configuration»",
            Name: "«Name»",
            Description: "«Description»",
            Configuration: "«Configuration»",
            ParentRoomSourceName: "«ParentRoom»",
            ParentRoom: "«ParentRoom»",
            ParentRoomConfiguration: "«ParentRoomConfiguration»",
            ParentRoomName: "«ParentRoomName»",
            ParentFrame: "«ParentFrame»",
            ParentDescription: "«ParentDescription»",
            Filepath: "«PATH»",
            Quantity: «NB»,
            ID: "«ID»",
            guid: "«GUID»",
            SwoodID: "«PANEL.NUM_PANEL»",
            SwoodIDEx: "«PANEL.NUM_PANEL_EXT»",
            SWPanelID: "«PanelID»",
            SWFrameID: "«FrameID»",
            CombineID: «CombineID»,
            IsBeamSaw: Boolean(«BeamSaw»),
            IsBeamSawMaterial: Boolean(«PAN_CORESTOCK.ST_MATO.Beam_Saw»),
            IsForSaw: Boolean(«PAN_CORESTOCK.ST_MATO.MAT_ISFORSAW»),
            IsCuttingPattern: false,
            CuttingPatternID:«PAN_CORESTOCK.ST_CPID»,
            Weight: «MASS»,
            IsExcluded: Boolean(«Exclude»),
            IsExcludedMaterial: Boolean(«PAN_CORESTOCK.ST_MATO.Exclude»),
            IsMultibody: false,
            IsCurved: Boolean(«PAN_CORESTOCK.ST_ISCURVED»),
            Image: "«IMGPANEL.DOC_REPORTRELATIVEURI»",
            ImageAbsoluteURI: "«IMGPANEL.DOC_ABSOLUTEURI»",
            ImageExists: Boolean(«IMGPANEL.DOC_FILEEXISTS»),
            Model: "«BABYLON_PANEL.DOC_REPORTRELATIVEURI»",
            ModelAbsoluteURI: "«BABYLON_PANEL.DOC_ABSOLUTEURI»",
            ModelExists: Boolean(«BABYLON_PANEL.DOC_FILEEXISTS»),
            ItemLink: "«WEB_PANEL_DETAILS.DOC_REPORTRELATIVEURI»?ProjectDB=" + encodeURIComponent("Database_«AssemblyName».js") + "&Name=" + encodeURIComponent("«Name»-«Configuration»") + "&Image=" + encodeURIComponent("«IMGPANELVIEWS.DOC_REPORTRELATIVEURI»"),
            Comments: <!--BLOC FORCEDENCODINGTYPE=2 -->"«Comments»"<!--/BLOC-->,
            CommentsCP: <!--BLOC FORCEDENCODINGTYPE=2 -->"«CommentsCP»"<!--/BLOC-->,
            Length: «PAN_LWEB»,
            Width: «PAN_WWEB»,
            Thickness: «PAN_TWL»,
            LengthWithEB: «PAN_LWEB»,
            WidthWithEB: «PAN_WWEB»,
            ThicknessWithLAM: «PAN_TWL»,
            LengthWithoutEB: «PAN_LWOEB»,
            WidthWithoutEB: «PAN_WWOEB»,
            ThicknessWithoutLAM: «PAN_TWOL»,
            RoughLength: «PAN_CORESTOCK.ST_L»,
            RoughWidth: «PAN_CORESTOCK.ST_W»,
            RoughThickness: «PAN_CORESTOCK.ST_T»,
            BoundingBoxLength: "«BoundingBoxLength»",
            BoundingBoxWidth: "«BoundingBoxWidth»",
            BoundingBoxThickness: "«BoundingBoxThickness»",
            Material: "«MAT»",
            MaterialId: "«MaterialId»",
            TopLaminate: "«PAN_LAMTOP.ST_MATO.MAT_NAME»",
            BottomLaminate: "«PAN_LAMBOT.ST_MATO.MAT_NAME»",
            MaterialThickness: «PAN_CORESTOCK.ST_MATO.MAT_T»,
            MaterialDescription: "«PAN_CORESTOCK.ST_MATO.MAT_DESC»",
            MaterialType: "«PAN_CORESTOCK.ST_MATO.Material_Type»",
            MaterialSwoodType: «PAN_CORESTOCK.ST_MATO.MAT_TYPE»,
            MaterialUnitCost: «PAN_CORESTOCK.ST_MATO.MAT_UCOST»,
            MaterialCostType: «PAN_CORESTOCK.ST_MATO.MAT_COSTTYPE»,
            MaterialSawCutReference: "«PAN_CORESTOCK.ST_MATO.MAT_CUTREF»",
            HasGrain: Boolean(«PAN_CORESTOCK.ST_MATO.MAT_WITHGRAIN»),
            PanelAngle: «PANEL.PAN_ANGLEINPART»,
            GrainAngle: «PANEL.PAN_GRAINANGLEINPART»,
            ProgramCount: «PROGCOUNT»,
            BoardLength: Number.isNaN(parseFloat(«PAN_CORESTOCK.ST_MATO.Board_Length»)) ? 0 : parseFloat(«PAN_CORESTOCK.ST_MATO.Board_Length»),  
            BoardWidth: Number.isNaN(parseFloat(«PAN_CORESTOCK.ST_MATO.Board_Width»)) ? 0 : parseFloat(«PAN_CORESTOCK.ST_MATO.Board_Width»),  
            Supplier: "«PAN_CORESTOCK.ST_MATO.Supplier»",
            LabourCosts: «LabourCosts»,
            Scribe: Boolean(«Scribe»),
            IsWeldmentMaterial: Boolean(«ST_MATO.Weldment»),
            PDFPath: "«PDF_PANELS.DOC_PATH»",
            PDFAbsoluteURI: "«PDF_PANELS.DOC_ABSOLUTEURI»",
            PDFRelativePath: "«PDF_PANELS.DOC_REPORTRELATIVEURI»",
            PDFExists: Boolean(«PDF_PANELS.DOC_FILEEXISTS»),
            EdgebandCount: «PAN_EBCOUNT»,
            // Part Custom Properties
            Part_STR_1: "«Part_STR_1»",
            Part_STR_2: "«Part_STR_2»",
            Part_STR_3: "«Part_STR_3»",
            Part_STR_4: "«Part_STR_4»",
            Part_STR_5: "«Part_STR_5»",
            Part_STR_6: "«Part_STR_6»",
            Part_STR_7: "«Part_STR_7»",
            Part_STR_8: "«Part_STR_8»",
            Part_STR_9: "«Part_STR_9»",
            Part_STR_10: "«Part_STR_10»",
            Part_BOO_1: Boolean(«Part_BOO_1»),
            Part_BOO_2: Boolean(«Part_BOO_2»),
            Part_BOO_3: Boolean(«Part_BOO_3»),
            Part_BOO_4: Boolean(«Part_BOO_4»),
            Part_BOO_5: Boolean(«Part_BOO_5»),
            Part_REA_1: «Part_REA_1»,
            Part_REA_2: «Part_REA_2»,
            Part_REA_3: «Part_REA_3»,
            Part_REA_4: «Part_REA_4»,
            Part_REA_5: «Part_REA_5»,
            Part_DIM_1: «Part_DIM_1»,
            Part_DIM_2: «Part_DIM_2»,
            Part_DIM_3: «Part_DIM_3»,
            Part_DIM_4: «Part_DIM_4»,
            Part_DIM_5: «Part_DIM_5»,
            Part_INT_1: «Part_INT_1»,
            Part_INT_2: «Part_INT_2»,
            Part_INT_3: «Part_INT_3»,
            Part_INT_4: «Part_INT_4»,
            Part_INT_5: «Part_INT_5»,
            Laminates: [
            <!--BLOCLAM LOOPON=STOCK LOOPONCONDITION=(ST_MATO.MAT_TYPE=1)AND((ST_N="TOP")OR(ST_N="BOTTOM")) REPEAT=-1 -->
                {
                    Name: "«ST_N»",
                    Length: «ST_L»,
                    Width: «ST_W»,
                    Thickness: «ST_T»,
                    Quantity: «NB»,
                    Material: "«ST_MATO.MAT_NAME»",
                    MaterialThickness: «ST_MATO.MAT_T»,
                    MaterialDescription: "«ST_MATO.MAT_DESC»",
                    MaterialType: "Laminates",
                    MaterialUnitCost: «ST_MATO.MAT_UCOST»,
                    MaterialCostType: «ST_MATO.MAT_COSTTYPE»,
                    MaterialSawCutReference: "«ST_MATO.MAT_CUTREF»",
                    HasGrain: Boolean(«ST_MATO.MAT_WITHGRAIN»),
                    PanelAngle: «ST_ANGLEINPANEL»,
                    GrainAngle: «ST_DFIL»,
                    // Laminate Extended Custom Properties
                    IsPaint: Boolean(«ST_MATO.Paint»),
                    Supplier: "«ST_MATO.Supplier»",
                },
            <!--/BLOCLAM-->
            ],
            Edgebands: [
            <!--BLOCROW1 LOOPON=EDGEBAND LOOPONCONDITION=((EB_EBMATO)AND(EB_L<>0)) REPEAT=-1 ORDERBY=EB_BO -->
                {
                    Name: "«EB_N»",
                    Order: «EB_BO»,
                    OrderFeature: «EB_P»,
                    Length: «EB_L»,
                    LengthStock: «EB_LSTOCK»,
                    LengthTotal: «EB_EBMATO.EBMAT_LEN»,
                    Width: «PAN_TWL»,
                    Thickness: «EB_EBMATO.EBMAT_T»,
                    Quantity: «NB»,
                    StockOffset: «EB_EBMATO.EBMAT_STO»,
                    Material: "«EB_EBMATO.EBMAT_C»",
                    MaterialThickness: «EB_EBMATO.EBMAT_T»,
                    MaterialDescription: "«EB_EBMATO.EBMAT_D»",
                    MaterialReference: "«EB_EBMATO.EBMAT_R»",
                    MaterialType: "Edgebands",
                    MaterialUnitCost: «EB_EBMATO.EBMAT_UCOST»,
                    MaterialColour: "«EB_EBMATO.EBMAT_CO»",
                    MaterialCostType: 2,
                    Position: "«EB_STOCKPOSITION»",
                    EdgebandID: «EB_EBMATO.EBMAT_ID»,
                    EdgebandIndex: «EB_EBMATO.EBMAT_IDX»,
                    EdgebandTrackingID: «EB_TRACKINGID»,
                    Cost: «EB_COST»,
                    CostLength: «EB_LMCOST»,
                    ForceStockExclusion: Boolean(«EB_FORCESTOCKEXCLUSION»),
                    Type: «EB_TYPE»,
                    IsCurved: Boolean(«EB_ISCURVED»),
                    // Edgeband Extended Custom Properties
                    Extension: Number.isNaN(parseFloat(«EB_EBMATO.Extension»)) ? 0 : parseFloat(«EB_EBMATO.Extension»),
                    MinimumLength: Number.isNaN(parseFloat(«EB_EBMATO.Minimum_Length»)) ? 0 : parseFloat(«EB_EBMATO.Minimum_Length»),
                    MinimumPartSustain: Number.isNaN(parseFloat(«EB_EBMATO.Minimum_Part_Sustain»)) ? 0 : parseFloat(«EB_EBMATO.Minimum_Part_Sustain»),
                    IsPaint: Boolean(«EB_EBMATO.Paint»),
                    Supplier: "«EB_EBMATO.Supplier»",
                    LeftEndShape: {
                        ID:"«EB_EBLEFTENDSHAPEO.EBENDSHAPE_ID»",
                        Name:"«EB_EBLEFTENDSHAPEO.EBENDSHAPE_N»",
                        Description:"«EB_EBLEFTENDSHAPEO.EBENDSHAPE_D»",
                    },
                    RightEndShape: {
                        ID:"«EB_EBRIGHTENDSHAPEO.EBENDSHAPE_ID»",
                        Name:"«EB_EBRIGHTENDSHAPEO.EBENDSHAPE_N»",
                        Description:"«EB_EBRIGHTENDSHAPEO.EBENDSHAPE_D»",
                    },
                },
            <!--/BLOCROW1-->
            ],
            Programs: [
            <!--BLOCROW3 LOOPON=PROGRAM LOOPONCONDITION=(PROG<>"") REPEAT=-1 -->
                {
                    ProgramName: "«PROG_NAME»",
                    ProgramFileName: "«PROG»",
                    ProgramID: «PROGID»,
                    ProgramPath: "«PROGRAM.DOC_REPORTRELATIVEURI»",
                    ProgramLink: "«WEB_PROGRAM_DETAILS.DOC_REPORTRELATIVEURI»?Name=" + encodeURIComponent("«Name»-«PROG»-«Configuration»") + "&Image=" + encodeURIComponent("«IMGPANELVIEWS.DOC_REPORTRELATIVEURI»"),
                },
            <!--/BLOCROW3-->
            ],
            Layers: [
            <!--BLOCROW2 LOOPON=STOCK LOOPONCONDITION=(UCASE(ST_N)CONTAINS"LAYER")  REPEAT=-1 -->
                {
                    Name: "«ST_N»",
                    Layer: true,
                    Length: «ST_L»,
                    Width: «ST_W»,
                    Thickness: «ST_T»,
                    Material: "«ST_MATO.MAT_NAME»",
                    MaterialThickness: «ST_MATO.MAT_T»,
                    MaterialDescription: "«ST_MATO.MAT_DESC»",
                    MaterialType: "«ST_MATO.Material_Type»",
                    MaterialSwoodType: «ST_MATO.MAT_TYPE»,
                    MaterialUnitCost: «ST_MATO.MAT_UCOST»,
                    MaterialCostType: «ST_MATO.MAT_COSTTYPE»,
                    MaterialSawCutReference: "«ST_MATO.MAT_CUTREF»",
                    HasGrain: Boolean(«ST_MATO.MAT_WITHGRAIN»),
                    PanelAngle: «ST_ANGLEINPANEL»,
                    GrainAngle: «ST_DFIL»,
                    // Layers Custom Properties
                    Supplier: "«ST_MATO.Supplier»",
                },
            <!--/BLOCROW2-->
            ],
            Profiles: [
            <!--BLOCPROFILE LOOPON=PROFILING REPEAT=-1 -->
                {
                    Name: "«PRF_N»",
                    Length: «PRF_L»,
                    StartExtension: «PRF_SEXT»,
                    EndExtension: «PRF_EEXT»,
                    XYOffset: «PRF_OXY»,
                    ZOffset: «PRF_OZ»,
                    Description: "«PRF_PRFSHO.PRFSH_D»",
                    ID: "«PRF_PRFSHO.PRFSH_ID»",
                    CH: "«PRF_PRFSHO.Type»",
                    ShapeName: "«PRF_PRFSHO.PRFSH_N»",
                },
            <!--/BLOCPROFILE-->
            ],
            PanelProcess: [
                <!--BLOCPANELPROCESSZONE LOOPON=PANEL_PROCESS_ZONE REPEAT=-1 -->
                {
                    Name: "«PROC.PROC_NAME»",
                    Category: "«PROC.PROC_CAT»",
                    Description: "«PROC.PROC_DESC»",
                    Quantity: «PROC_ZONE_QTT»,
                    CostType: «PROC.PROC_COSTTYPE»,
                    Thickness: «PROC.PROC_THICKNESS»,
                    UnitCost: «PROC.PROC_UCOST»,
                    ZoneName: "«PROC_ZONENAME»",
                    ZoneMask: «PROC_ZONEMASK»,
                    ZoneCost: «PROC_ZONE_COST»,
                },
                <!--/BLOCPANELPROCESSZONE -->   
            ],
        },
    <!--/BLOCPANEL-->

    <!--BLOCMULTIBODYPART LOOPON=PART LOOPONCONDITION=(MULTIBODYPART)AND(NOT(Exclude)) REPEAT=-1 ORDERBY=-Name --> 
        <!--BLOCMULTIBODYSUB LOOPON=STOCK LOOPONCONDITION=(NOT(UCASE(ST_N)CONTAINS"LAYER")) REPEAT=-1 ORDERBY=-Name -->
        {
            Name: "«ST_N»",
            SourceName: "«Name»-«MBS_Cutlist»-«ST_N»-«Configuration»",
            Description: "«MBS_Description»",
            Configuration: "«Configuration»",
            ParentRoomSourceName: "«ParentRoom»",
            ParentRoom: "«ParentRoom»",
            ParentRoomConfiguration: "«ParentRoomConfiguration»",
            ParentRoomName: "«ParentRoomName»",
            ParentFrame: "«Name»",
            Quantity: «MBS_Quantity»,
            SwoodID: "«PANEL.NUM_PANEL»",
            SWPanelID: "«PanelID»",
            CombineID: «CombineID»,
            IsBeamSaw: false,
            IsBeamSawMaterial: false,
            IsCuttingPattern: false,
            IsExcluded: Boolean(«Exclude»),
            IsMultibody: true,
            Image: "«IMGMULTIBODYPANEL.DOC_REPORTRELATIVEURI»",
            ImageAbsoluteURI: "«IMGMULTIBODYPANEL.DOC_ABSOLUTEURI»",
            ImageExists: Boolean(«IMGMULTIBODYPANEL.DOC_FILEEXISTS»),
            ItemLink: "«WEB_PANEL_DETAILS.DOC_REPORTRELATIVEURI»?Name="+ encodeURIComponent("«Name»-«MBS_Cutlist»-«ST_N»-«Configuration»") + "&Image=" + encodeURIComponent("«IMGMULTIBODYPANEL»"),
            Length: «ST_L»,
            Width: «ST_W»,
            Thickness: «ST_T»,
            Material: "«ST_MATO.MAT_NAME»",
            MaterialThickness: «ST_MATO.MAT_T»,
            MaterialDescription: "«ST_MATO.MAT_DESC»",
            MaterialType: "«ST_MATO.Material_Type»",
            MaterialSwoodType: «ST_MATO.MAT_TYPE»,
            MaterialUnitCost: «ST_MATO.MAT_UCOST»,
            MaterialCostType: «ST_MATO.MAT_COSTTYPE»,
            MaterialSawCutReference: "«ST_MATO.MAT_CUTREF»",
            HasGrain: Boolean(«ST_MATO.MAT_WITHGRAIN»),
            PanelAngle: «ST_ANGLEINPANEL»,
            GrainAngle: «ST_DFIL»,
            WeldmentFolder: "«MBS_Cutlist»",
            IsWeldmentMaterial: Boolean(«ST_MATO.Weldment»),
            // Part Custom Properties
            Part_STR_1: "«Part_STR_1»",
            Part_STR_2: "«Part_STR_2»",
            Part_STR_3: "«Part_STR_3»",
            Part_STR_4: "«Part_STR_4»",
            Part_STR_5: "«Part_STR_5»",
            Part_STR_6: "«Part_STR_6»",
            Part_STR_7: "«Part_STR_7»",
            Part_STR_8: "«Part_STR_8»",
            Part_STR_9: "«Part_STR_9»",
            Part_STR_10: "«Part_STR_10»",
            Part_BOO_1: Boolean(«Part_BOO_1»),
            Part_BOO_2: Boolean(«Part_BOO_2»),
            Part_BOO_3: Boolean(«Part_BOO_3»),
            Part_BOO_4: Boolean(«Part_BOO_4»),
            Part_BOO_5: Boolean(«Part_BOO_5»),
            Part_REA_1: «Part_REA_1»,
            Part_REA_2: «Part_REA_2»,
            Part_REA_3: «Part_REA_3»,
            Part_REA_4: «Part_REA_4»,
            Part_REA_5: «Part_REA_5»,
            Part_DIM_1: «Part_DIM_1»,
            Part_DIM_2: «Part_DIM_2»,
            Part_DIM_3: «Part_DIM_3»,
            Part_DIM_4: «Part_DIM_4»,
            Part_DIM_5: «Part_DIM_5»,
            Part_INT_1: «Part_INT_1»,
            Part_INT_2: «Part_INT_2»,
            Part_INT_3: «Part_INT_3»,
            Part_INT_4: «Part_INT_4»,
            Part_INT_5: «Part_INT_5»,
            Layers: [],
        },
        <!--/BLOCMULTIBODYSUB-->
    <!--/BLOCMULTIBODYPART-->
    ],

    MultibodyLayerData: [
    <!--BLOCMULTIBODYPART LOOPON=PART LOOPONCONDITION=(MULTIBODYPART)AND(NOT(Exclude)) REPEAT=-1 --> 
        <!--BLOCMULTIBODYSUB LOOPON=STOCK LOOPONCONDITION=NOT(Exclude)AND(UCASE(ST_N)CONTAINS"LAYER") REPEAT=-1 ORDERBY=ST_N -->
        {
            Name: "«ST_N»",
            Layer: true,
            SourceName: "«Name»-«MBS_Cutlist»-«ST_N»-«Configuration»",
            Description: "«MBS_Description»",
            Configuration: "«Configuration»",
            ParentRoomSourceName: "«ParentRoom»",
            ParentRoom: "«ParentRoom»",
            ParentRoomConfiguration: "«ParentRoomConfiguration»",
            ParentRoomName: "«ParentRoomName»",
            ParentFrame: "«Name»",
            Quantity: «MBS_Quantity»,
            SwoodID: "«PANEL.NUM_PANEL»",
            SWPanelID: "«PanelID»",
            CombineID: «CombineID»,
            IsBeamSaw: false,
            IsExcluded: Boolean(«Exclude»),
            IsMultibody: true,
            Image: "«IMGMULTIBODYPANEL.DOC_REPORTRELATIVEURI»",
            ImageAbsoluteURI: "«IMGMULTIBODYPANEL.DOC_ABSOLUTEURI»",
            ImageExists: Boolean(«IMGMULTIBODYPANEL.DOC_FILEEXISTS»),
            ItemLink: "«WEB_PANEL_DETAILS.DOC_REPORTRELATIVEURI»",
            Length: «ST_L»,
            Width: «ST_W»,
            Thickness: «ST_T»,
            Material: "«ST_MATO.MAT_NAME»",
            MaterialThickness: «ST_MATO.MAT_T»,
            MaterialDescription: "«ST_MATO.MAT_DESC»",
            MaterialType: "«ST_MATO.Material_Type»",
            MaterialSwoodType: «ST_MATO.MAT_TYPE»,
            MaterialUnitCost: «ST_MATO.MAT_UCOST»,
            MaterialCostType: «ST_MATO.MAT_COSTTYPE»,
            MaterialSawCutReference: "«ST_MATO.MAT_CUTREF»",
            HasGrain: Boolean(«ST_MATO.MAT_WITHGRAIN»),
            PanelAngle: «ST_ANGLEINPANEL»,
            GrainAngle: «ST_DFIL»,
            WeldmentFolder: "«MBS_Cutlist»",
            // Part Custom Properties
            Part_STR_1: "«Part_STR_1»",
            Part_STR_2: "«Part_STR_2»",
            Part_STR_3: "«Part_STR_3»",
            Part_STR_4: "«Part_STR_4»",
            Part_STR_5: "«Part_STR_5»",
            Part_STR_6: "«Part_STR_6»",
            Part_STR_7: "«Part_STR_7»",
            Part_STR_8: "«Part_STR_8»",
            Part_STR_9: "«Part_STR_9»",
            Part_STR_10: "«Part_STR_10»",
            Part_BOO_1: Boolean(«Part_BOO_1»),
            Part_BOO_2: Boolean(«Part_BOO_2»),
            Part_BOO_3: Boolean(«Part_BOO_3»),
            Part_BOO_4: Boolean(«Part_BOO_4»),
            Part_BOO_5: Boolean(«Part_BOO_5»),
            Part_REA_1: «Part_REA_1»,
            Part_REA_2: «Part_REA_2»,
            Part_REA_3: «Part_REA_3»,
            Part_REA_4: «Part_REA_4»,
            Part_REA_5: «Part_REA_5»,
            Part_DIM_1: «Part_DIM_1»,
            Part_DIM_2: «Part_DIM_2»,
            Part_DIM_3: «Part_DIM_3»,
            Part_DIM_4: «Part_DIM_4»,
            Part_DIM_5: «Part_DIM_5»,
            Part_INT_1: «Part_INT_1»,
            Part_INT_2: «Part_INT_2»,
            Part_INT_3: «Part_INT_3»,
            Part_INT_4: «Part_INT_4»,
            Part_INT_5: «Part_INT_5»,
        },
        <!--/BLOCMULTIBODYSUB--> 
    <!--/BLOCMULTIBODYPART-->
    ],

    WeldmentData: [
    <!--BLOCMULTIBODYPART LOOPON=PART LOOPONCONDITION=(MULTIBODYPART)AND(NOT((TOTYPES)CONTAINS"HARDWARE"))AND(NOT(Exclude)) REPEAT=-1 ORDERBY=-Name --> 
        <!--BLOCMULTIBODYSUB LOOPON=STOCK LOOPONCONDITION=(NOT(UCASE(ST_N)CONTAINS"LAYER")) REPEAT=-1 ORDERBY=-Name -->
        {
            Name: "«ST_N»",
            SourceName: "«Name»-«MBS_Cutlist»-«ST_N»-«Configuration»",
            Description: "«MBS_Description»",
            Configuration: "«Configuration»",
            ParentRoomSourceName: "«ParentRoom»",
            ParentRoom: "«ParentRoom»",
            ParentRoomConfiguration: "«ParentRoomConfiguration»",
            ParentRoomName: "«ParentRoomName»",
            ParentFrame: "«Name»",
            WeldmentLength: «MBS_Length»,
            WeldmentTotalLength: «MBS_TotalLength»,
            WeldmentAngle1: "«MBS_Angle1»",
            WeldmentAngle2: "«MBS_Angle2»",
            WeldmentBBLength: «MBS_BB_Length»,
            WeldmentBBWidth: «MBS_BB_Width»,
            WeldmentBBThickness: «MBS_BB_Thickness»,
            WeldmentBBVolume: «MBS_BB_Volume»,
            BBDimensions: "«MBS_BB_Length» x «MBS_BB_Width» x «MBS_BB_Thickness»",
            Quantity: «NB»,
            WeldmentQuantity: «MBS_Quantity»,
            CombineID: «CombineID»,
            IsWeldment: true,
            IsExcluded: Boolean(«Exclude»),
            IsMultibody: true,
            Length: «ST_L»,
            Width: «ST_W»,
            Thickness: «ST_T»,
            Material: "«ST_MATO.MAT_NAME»",
            MaterialThickness: «ST_MATO.MAT_T»,
            MaterialDescription: "«MBS_Description»",
            MaterialType: "Weldment",
            MaterialSwoodType: «ST_MATO.MAT_TYPE»,
            MaterialUnitCost: «ST_MATO.MAT_UCOST»,
            MaterialCostType: «ST_MATO.MAT_COSTTYPE»,
            MaterialSawCutReference: "«ST_MATO.MAT_CUTREF»",
            HasGrain: Boolean(«ST_MATO.MAT_WITHGRAIN»),
            PanelAngle: «ST_ANGLEINPANEL»,
            GrainAngle: «ST_DFIL»,
            WeldmentFolder: "«MBS_Cutlist»",
            IsWeldmentMaterial: Boolean(«ST_MATO.Weldment»),
            // Part Custom Properties
            Part_STR_1: "«Part_STR_1»",
            Part_STR_2: "«Part_STR_2»",
            Part_STR_3: "«Part_STR_3»",
            Part_STR_4: "«Part_STR_4»",
            Part_STR_5: "«Part_STR_5»",
            Part_STR_6: "«Part_STR_6»",
            Part_STR_7: "«Part_STR_7»",
            Part_STR_8: "«Part_STR_8»",
            Part_STR_9: "«Part_STR_9»",
            Part_STR_10: "«Part_STR_10»",
            Part_BOO_1: Boolean(«Part_BOO_1»),
            Part_BOO_2: Boolean(«Part_BOO_2»),
            Part_BOO_3: Boolean(«Part_BOO_3»),
            Part_BOO_4: Boolean(«Part_BOO_4»),
            Part_BOO_5: Boolean(«Part_BOO_5»),
            Part_REA_1: «Part_REA_1»,
            Part_REA_2: «Part_REA_2»,
            Part_REA_3: «Part_REA_3»,
            Part_REA_4: «Part_REA_4»,
            Part_REA_5: «Part_REA_5»,
            Part_DIM_1: «Part_DIM_1»,
            Part_DIM_2: «Part_DIM_2»,
            Part_DIM_3: «Part_DIM_3»,
            Part_DIM_4: «Part_DIM_4»,
            Part_DIM_5: «Part_DIM_5»,
            Part_INT_1: «Part_INT_1»,
            Part_INT_2: «Part_INT_2»,
            Part_INT_3: «Part_INT_3»,
            Part_INT_4: «Part_INT_4»,
            Part_INT_5: «Part_INT_5»,
        },
        <!--/BLOCMULTIBODYSUB--> 
    <!--/BLOCMULTIBODYPART-->
    ],

    ProgramData: [
    <!--BLOCPROGRAM LOOPON=PROGRAM LOOPONCONDITION=(PROGTYPE=0)AND(PROG<>"")AND(NOT(Exclude)) REPEAT=-1 -->
        {
            DataType: "Program",
            ID: "«ID»",
            guid: "«GUID»",
            IsCompleted: false,
            Name: "«Name»",
            SourceName: "«Name»-«PROG»-«Configuration»",
            Filepath: "«PATH»",
            Description: "«Description»",
            Configuration: "«Configuration»",
            ParentRoomSourceName: "«ParentRoom»",
            ParentRoom: "«ParentRoom»",
            ParentRoomConfiguration: "«ParentRoomConfiguration»",
            ParentRoomName: "«ParentRoomName»",
            ParentFrame: "«ParentFrame»",
            ParentDescription: "«ParentDescription»",
            Quantity: «NB»,
            PartID: "«NUM_PART»",
            SwoodID: "«NUM_PROG»",
            SWPanelID: "«PanelID»",
            CombineID: «CombineID»,
            ProgramID: «PROGID»,
            IsExcluded: Boolean(«Exclude»),
            Image: "«IMGPROGRAM.DOC_REPORTRELATIVEURI»",
            ImageAbsoluteURI: "«IMGPROGRAM.DOC_ABSOLUTEURI»",
            ImageExists: Boolean(«IMGPROGRAM.DOC_FILEEXISTS»),
            ItemLink: "«WEB_PROGRAM_DETAILS.DOC_REPORTRELATIVEURI»?Name=" + encodeURIComponent("«Name»-«PROG»-«Configuration»") + "&Image=" + encodeURIComponent("«IMGPANELVIEWS.DOC_REPORTRELATIVEURI»"),
            ProgramName: "«PROG_NAME»",
            ProgramFileName: "«PROG»",
            ProgramDirectory: "«PROGDIR»",
            ProgramPath: "«PROGRAM.DOC_REPORTRELATIVEURI»",
            ProgramFullPath: "«PROGPATH»",
            Machine: "«PROGMAC»",
            Material: "«MAT»",
            MaterialId: "«MaterialId»",
            Length: Number.isNaN(parseFloat(«PANEL.PAN_STL»)) ? 0 : parseFloat(«PANEL.PAN_STL»),
            Width: Number.isNaN(parseFloat(«PANEL.PAN_STW»)) ? 0 : parseFloat(«PANEL.PAN_STW»),
            Thickness: Number.isNaN(parseFloat(«PANEL.PAN_TWL»)) ? 0 : parseFloat(«PANEL.PAN_TWL»),
            LengthSW: Number.isNaN(parseFloat(«Length»)) ? 0 : parseFloat(«Length»),
            WidthSW: Number.isNaN(parseFloat(«Width»)) ? 0 : parseFloat(«Width»),
            ThicknessSW: Number.isNaN(parseFloat(«Thickness»)) ? 0 : parseFloat(«Thickness»),
            ProgramLength: «PROGBX»,
            ProgramWidth: «PROGBY»,
            ProgramThickness: «PROGBZ»,
            ProgramZ: «PROG_OP0ZXPANELZ»,
            ProgramAngleX: «PROG_ANGLE_OP0X_PANELX»,
            Time: «PROGTPS»,
            ProductiveTime: «PROGTPSPRO»,
            UnproductiveTime: «PROGTPSIMPRO»,
            HourCost: «PROGMAC_HOURCOST»,
            Comments: <!--BLOC FORCEDENCODINGTYPE=2 -->"«PROGCOMMENT»"<!--/BLOC-->,
            // Part Custom Properties
            Part_STR_1: "«Part_STR_1»",
            Part_STR_2: "«Part_STR_2»",
            Part_STR_3: "«Part_STR_3»",
            Part_STR_4: "«Part_STR_4»",
            Part_STR_5: "«Part_STR_5»",
            Part_STR_6: "«Part_STR_6»",
            Part_STR_7: "«Part_STR_7»",
            Part_STR_8: "«Part_STR_8»",
            Part_STR_9: "«Part_STR_9»",
            Part_STR_10: "«Part_STR_10»",
            Part_BOO_1: Boolean(«Part_BOO_1»),
            Part_BOO_2: Boolean(«Part_BOO_2»),
            Part_BOO_3: Boolean(«Part_BOO_3»),
            Part_BOO_4: Boolean(«Part_BOO_4»),
            Part_BOO_5: Boolean(«Part_BOO_5»),
            Part_REA_1: «Part_REA_1»,
            Part_REA_2: «Part_REA_2»,
            Part_REA_3: «Part_REA_3»,
            Part_REA_4: «Part_REA_4»,
            Part_REA_5: «Part_REA_5»,
            Part_DIM_1: «Part_DIM_1»,
            Part_DIM_2: «Part_DIM_2»,
            Part_DIM_3: «Part_DIM_3»,
            Part_DIM_4: «Part_DIM_4»,
            Part_DIM_5: «Part_DIM_5»,
            Part_INT_1: «Part_INT_1»,
            Part_INT_2: «Part_INT_2»,
            Part_INT_3: «Part_INT_3»,
            Part_INT_4: «Part_INT_4»,
            Part_INT_5: «Part_INT_5»,
            ToolList: [
            <!--BLOCROW LOOPON=TOOL LOOPONCONDITION=(PROG<>"") ORDERBY=TOOL_NUMBER REPEAT=-1 -->
                {
                    ToolName: "«TOOL_NAME»",
                    ToolNumber: «TOOL_NUMBER»,
                    ToolDiameter: «TOOL_DIAM»,
                    ToolLength: «TOOL_LU»,
                    SpindleTools: [
                    <!--BLOCROW LOOPON=SPINDLE LOOPONCONDITION=(SPINDLE_USED)AND(PROG<>"") ORDERBY=SPINDLE_NUMBER REPEAT=-1 -->
                        {
                            Name: "«TOOL_NAME»",
                            ToolName: "«SPINDLE_NAME»",
                            ToolNumber: «SPINDLE_NUMBER»,
                            ToolDiameter: «SPINDLE_DIAM»,
                            ToolLength: «SPINDLE_LU»,
                        },
                    <!--/BLOCROW-->
                    ],
                },
            <!--/BLOCROW-->
            ]
        },
    <!--/BLOCPROGRAM-->
    ],

    SheetData: [
    <!--BLOCNEST LOOPON=PROGRAM LOOPONCONDITION=(PROGTYPE=2)AND(PROG_NBOARDO) REPEAT=-1 -->
        {
            DataType: "Sheet",
            IsCompleted: false,
            guid: "",
            Name: "«PROG»",
            SourceName: "«Name»-«PROG_NAME»-«PROGID»-«Configuration»",
            SheetID: "«PROGID»",
            SwoodID: "«NUM_SHEET»",
            ProgramName: "«PROG_NAME»",
            ProgramFileName: "«PROG»",
            ProgramDirectory: "«PROGCFGPATH»",
            ProgramPath: "«PROGRAM.DOC_REPORTRELATIVEURI»",
            ProgramFullPath: "«PROGPATH»",
            Machine: "«PROGMAC»",
            Quantity: «PROG_NSHEETQTY»,
            Image: "«IMGPROGRAMNEST.DOC_REPORTRELATIVEURI»",
            ImageAbsoluteURI: "«IMGPROGRAMNEST.DOC_ABSOLUTEURI»",
            ImageExists: Boolean(«IMGPROGRAMNEST.DOC_FILEEXISTS»),
            Model: "«BABYLON_SHEET.DOC_REPORTRELATIVEURI»",
            ModelAbsoluteURI: "«BABYLON_SHEET.DOC_ABSOLUTEURI»",
            ModelExists: Boolean(«BABYLON_SHEET.DOC_FILEEXISTS»),
            ItemLink: "«WEB_REPORT_SHEETS_DETAILS.DOC_REPORTRELATIVEURI»?Name=" + encodeURIComponent("«Name»-«PROG_NAME»-«PROGID»-«Configuration»") + "&Image=" + encodeURIComponent("«IMGPROGRAMNEST.DOC_REPORTRELATIVEURI»"),
            Material: "«PROG_NBOARDO.NBOARD_NAME»",
            MaterialDescription: "«PROG_NBOARDO.NBOARD_DESC»",
            PartMaterial: "«PROG_NBOARDO.NBOARD_MATNAME»",
            SheetMaterial: "«PROG_NBOARDO.NBOARD_NAME»",
            HasGrain: Boolean(«PROG_NBOARDO.NBOARD_MATO.MAT_WITHGRAIN»),
            MaterialType: "Boards",
            MaterialUnitCost: «PROG_NBOARDO.NBOARD_COST»,
            MaterialCostType: 3,
            Length: «PROG_NBOARDO.NBOARD_L»,
            Width: «PROG_NBOARDO.NBOARD_W»,
            MaterialThickness: «PROG_NBOARDO.NBOARD_T»,
            ProgramLength: «PROGBX»,
            ProgramWidth: «PROGBY»,
            ProgramThickness: «PROGBZ»,
            Time: «PROGTPS»,
            ProductiveTime: «PROGTPSPRO»,
            UnproductiveTime: «PROGTPSIMPRO»,
            HourCost: «PROGMAC_HOURCOST»,
            ScrapX: «PROG_NSHEETSCRAPX»,
            ScrapY: «PROG_NSHEETSCRAPY»,
            SurfaceSheet: «PROG_NSHEETSURFACE»,
            SurfaceParts: «PROG_NSHEETSURFACEUSEDBYPARTS»,
            SurfaceScraps: «PROG_NSHEETSURFACEUSEDBYSCRAPS»,
            WastedArea: «PROG_NSHEETWASTEAREA»,
            PartCount: «PROG_PARTCOUNT»,
            OffcutCount: «PROG_OFFCUTCOUNT»,
            OffcutArea: «PROG_OFFCUTS_AREA»,
            RebuildError: "«REBUILDMSG»",
            EncodingError: "«ENCODEMSG»",
            Comments: <!--BLOC FORCEDENCODINGTYPE=2 -->"«PROGCOMMENT»"<!--/BLOC-->,
            NestedPanels: [
            <!--BLOCROW REPEAT=-1 LOOPON=PROGRAMPART -->
                {
                    DataType: 'NestedPanel',
                    Name: "«PROGPART_PARTO.NOM»",
                    NameComponent: "«PROGPART_PARTO.COMPNAME»",
                    guid: "",
                    SourceName: "«PROGPART_PARTO.NOM»-«PROGPART_PARTO.Configuration»",
                    Description: "«PROGPART_PARTO.Description»",
                    Configuration: "«PROGPART_PARTO.Configuration»",
                    Quantity: «PROGPART_PARTO.NB»,
                    ID: "«PROGPART_PARTO.ID»",
                    SwoodID: "«NUM_PROGRAMPART»",
                    SwoodPartID: "«PROGPART_PARTO.NUM_PART»",
                    SwoodPanelID: "«PROGPART_PARTO.PANEL.NUM_PANEL»",
                    SWPanelID: "«PROGPART_PARTO.PanelID»",
                    CombineID: «PROGPART_PARTO.CombineID»,
                    NestedQuantity: «PROGPART_PARTO.NB»,
                    Machine: "«PROGMAC»",
                    Image: "«PROGPART_PARTO.PANEL.IMGPANEL.DOC_REPORTRELATIVEURI»",
                    ProgramPartImage: "«IMGPROGRAMPART.DOC_REPORTRELATIVEURI»",
                    ItemLink: "«WEB_PANEL_DETAILS.DOC_REPORTRELATIVEURI»?Name=" + encodeURIComponent("«PROGPART_PARTO.NOM»-«PROGPART_PARTO.Configuration»") + "&Image=" + encodeURIComponent("«PROGPART_PARTO.IMGPANELVIEWS.DOC_REPORTRELATIVEURI»"),
                    Material: "«PROG_NBOARDO.NBOARD_MATNAME»",
                    SheetMaterial: "«PROG_NBOARDO.NBOARD_NAME»",
                    HasGrain: Boolean(«PROGPART_PARTO.PANEL.PAN_CORESTOCK.ST_MATO.MAT_WITHGRAIN»),
                    SheetQuantity: «PROG_NSHEETQTY»,
                    SheetID: «PROGID»,
                    NestingID: «PROGPART_ID»,
                    NestingNumber: «PROGPART_NESTING_ILABEL»,
                    Length: isNaN(parseFloat(«PROGPART_PARTO.PANEL.PAN_LWEB»)) ? 0 : parseFloat(«PROGPART_PARTO.PANEL.PAN_LWEB»),
                    Width: isNaN(parseFloat(«PROGPART_PARTO.PANEL.PAN_WWEB»)) ? 0 : parseFloat(«PROGPART_PARTO.PANEL.PAN_WWEB»),
                    Thickness: isNaN(parseFloat(«PROGPART_PARTO.PANEL.PAN_TWL»)) ? 0 : parseFloat(«PROGPART_PARTO.PANEL.PAN_TWL»),
                    LengthWithEB: isNaN(parseFloat(«PROGPART_PARTO.PANEL.PAN_LWEB»)) ? 0 : parseFloat(«PROGPART_PARTO.PANEL.PAN_LWEB»),
                    WidthWithEB: isNaN(parseFloat(«PROGPART_PARTO.PANEL.PAN_WWEB»)) ? 0 : parseFloat(«PROGPART_PARTO.PANEL.PAN_WWEB»),
                    ThicknessWithLAM: isNaN(parseFloat(«PROGPART_PARTO.PANEL.PAN_TWL»)) ? 0 : parseFloat(«PROGPART_PARTO.PANEL.PAN_TWL»),
                    LengthWithoutEB: isNaN(parseFloat(«PROGPART_PARTO.PANEL.PAN_LWOEB»)) ? 0 : parseFloat(«PROGPART_PARTO.PANEL.PAN_LWOEB»),
                    WidthWithoutEB: isNaN(parseFloat(«PROGPART_PARTO.PANEL.PAN_WWOEB»)) ? 0 : parseFloat(«PROGPART_PARTO.PANEL.PAN_WWOEB»),
                    ThicknessWithoutLAM: isNaN(parseFloat(«PROGPART_PARTO.PANEL.PAN_TWOL»)) ? 0 : parseFloat(«PROGPART_PARTO.PANEL.PAN_TWOL»),
                    RoughLength: isNaN(parseFloat(«PROGPART_PARTO.PANEL.PAN_CORESTOCK.ST_L»)) ? 0 : parseFloat(«PROGPART_PARTO.PANEL.PAN_CORESTOCK.ST_L»),
                    RoughWidth: isNaN(parseFloat(«PROGPART_PARTO.PANEL.PAN_CORESTOCK.ST_W»)) ? 0 : parseFloat(«PROGPART_PARTO.PANEL.PAN_CORESTOCK.ST_W»),
                    RoughThickness: isNaN(parseFloat(«PROGPART_PARTO.PANEL.PAN_CORESTOCK.ST_T»)) ? 0 : parseFloat(«PROGPART_PARTO.PANEL.PAN_CORESTOCK.ST_T»),
                    SWLength: «PROGPART_PARTO.Length»,
                    SWWidth: «PROGPART_PARTO.Width»,
                    SWThickness: «PROGPART_PARTO.Thickness»,
                    Weight: «PROGPART_PARTO.MASS»,
                    BoundingBoxLength: «PROGPART_PARTO.BoundingBoxLength»,  
                    BoundingBoxWidth: «PROGPART_PARTO.BoundingBoxWidth»,  
                    BoundingBoxThickness: «PROGPART_PARTO.BoundingBoxThickness»,  
                    ProgramCount: «PROGPART_PARTO.PROGCOUNT»,
                    NestingAngle: «PROGPART_NANGLE»,
                    LabelAngle: «PROGPART_LABELANG»,
                    LabelX: «PROGPART_LABELX»,
                    LabelY: «PROGPART_LABELY»,
                    LabelZ: «PROGPART_LABELZ»,
                    Parent: "«PROGPART_NESTING_PARENT»",
                    ParentIndex: «PROGPART_NPARENTINDEX»,
                    ParentName: "«PROGPART_NPARENTNAME»",
                    ParentFileName: "«PROGPART_NPARENTNAME»",
                    ParentConfiguration: "«PROGPART_NPARENTCONFIG»",
                    ParentPath: "«PROGPART_NPARENTPATH»",
                    ParentSourceName: "«PROGPART_NPARENTPATH»-«PROGPART_NPARENTCONFIG»",
                    <!--BLOC_OUTER LOOPON=OUTER REPEAT = -1 -->
                    ProgramPartX:«EVAL(PLINE_XMAX-PLINE_XMIN)»,
                    ProgramPartY:«EVAL(PLINE_YMAX-PLINE_YMIN)»,
                    ProgramPartXmin:«PLINE_XMIN»,
                    ProgramPartYmin:«PLINE_YMIN»,
                    ProgramPartXmax:«PLINE_XMAX»,
                    ProgramPartYmax:«PLINE_YMAX»,
                    <!--/BLOC_OUTER -->
                    // Part Custom Properties
                    Part_STR_1: "«PROGPART_PARTO.Part_STR_1»",
                    Part_STR_2: "«PROGPART_PARTO.Part_STR_2»",
                    Part_STR_3: "«PROGPART_PARTO.Part_STR_3»",
                    Part_STR_4: "«PROGPART_PARTO.Part_STR_4»",
                    Part_STR_5: "«PROGPART_PARTO.Part_STR_5»",
                    Part_STR_6: "«PROGPART_PARTO.Part_STR_6»",
                    Part_STR_7: "«PROGPART_PARTO.Part_STR_7»",
                    Part_STR_8: "«PROGPART_PARTO.Part_STR_8»",
                    Part_STR_9: "«PROGPART_PARTO.Part_STR_9»",
                    Part_STR_10: "«PROGPART_PARTO.Part_STR_10»",
                    Part_BOO_1: Boolean(«PROGPART_PARTO.Part_BOO_1»),
                    Part_BOO_2: Boolean(«PROGPART_PARTO.Part_BOO_2»),
                    Part_BOO_3: Boolean(«PROGPART_PARTO.Part_BOO_3»),
                    Part_BOO_4: Boolean(«PROGPART_PARTO.Part_BOO_4»),
                    Part_BOO_5: Boolean(«PROGPART_PARTO.Part_BOO_5»),
                    Part_REA_1: «PROGPART_PARTO.Part_REA_1»,
                    Part_REA_2: «PROGPART_PARTO.Part_REA_2»,
                    Part_REA_3: «PROGPART_PARTO.Part_REA_3»,
                    Part_REA_4: «PROGPART_PARTO.Part_REA_4»,
                    Part_REA_5: «PROGPART_PARTO.Part_REA_5»,
                    Part_DIM_1: «PROGPART_PARTO.Part_DIM_1»,
                    Part_DIM_2: «PROGPART_PARTO.Part_DIM_2»,
                    Part_DIM_3: «PROGPART_PARTO.Part_DIM_3»,
                    Part_DIM_4: «PROGPART_PARTO.Part_DIM_4»,
                    Part_DIM_5: «PROGPART_PARTO.Part_DIM_5»,
                    Part_INT_1: «PROGPART_PARTO.Part_INT_1»,
                    Part_INT_2: «PROGPART_PARTO.Part_INT_2»,
                    Part_INT_3: «PROGPART_PARTO.Part_INT_3»,
                    Part_INT_4: «PROGPART_PARTO.Part_INT_4»,
                    Part_INT_5: «PROGPART_PARTO.Part_INT_5»,
                },
                <!--/BLOCROW-->
            ],
            Offcuts: [
                <!--BLOCROW REPEAT=-1 LOOPON=PROGRAMOFFCUT -->
                {
                    Name: "«PROGOFFCUT_NAME»",
                    guid: "",
                    SheetID: «PROGID»,
                    NestingID: «PROGOFFCUT_ID»,
                    SWPanelID: "",
                    BoardType: "«PROGOFFCUT_BOARDTYPE»",
                    Material: "«PROGOFFCUT_MATERIALS»",
                    MaterialID: "«PROGOFFCUT_MATERIALID»",
                    GrainDirection: "«PROGOFFCUT_GRAIN»",
                    Length: «PROGOFFCUT_LENGTH»,
                    Width: «PROGOFFCUT_WIDTH»,
                    Thickness: «PROGOFFCUT_THICKNESS»,
                    Quantity: «PROGOFFCUT_QTY»,
                    NestingAngle: «PROGOFFCUT_NANGLE»,
                    MaterialTop: "«PROGOFFCUT_TOP_MAT»",
                    GrainAngleTop: «PROGOFFCUT_TOP_GRAIN_ANGLE»,
                    MaterialBottom: "«PROGOFFCUT_BOT_MAT»",
                    GrainAngleBottom: «PROGOFFCUT_BOT_GRAIN_ANGLE»,
                    LabelAngle: «PROGOFFCUT_LABELANG»,
                    LabelX: «PROGOFFCUT_LABELX»,
                    LabelY: «PROGOFFCUT_LABELY»,
                    LabelZ: «PROGOFFCUT_LABELZ»,
                    Image: "«IMGPROGRAMOFFCUT.DOC_REPORTRELATIVEURI»",
                    ItemLink: "#",
                },
            <!--/BLOCROW-->
            ],
            ToolData: [
            <!--BLOCROW LOOPON=TOOL LOOPONCONDITION=(PROGNAME<>"") ORDERBY=TOOL_NUMBER REPEAT=-1 -->
                {
                    ToolName: "«TOOL_NAME»",
                    ToolNumber: «TOOL_NUMBER»,
                    ToolDiameter: «TOOL_DIAM»,
                    ToolLength: «TOOL_LU»,
                    SpindleTools: [
                    <!--BLOCROW LOOPON=SPINDLE LOOPONCONDITION=(SPINDLE_USED)AND(PROGNAME<>"") ORDERBY=SPINDLE_NUMBER REPEAT=-1 -->
                        {
                            Name: "«TOOL_NAME»",
                            ToolName: "«SPINDLE_NAME»",
                            ToolNumber: «SPINDLE_NUMBER»,
                            ToolDiameter: «SPINDLE_DIAM»,
                            ToolLength: «SPINDLE_LU»,
                        },
                    <!--/BLOCROW-->
                    ],
                },
            <!--/BLOCROW-->
            ]
        },
    <!--/BLOCNEST-->
    ],

    CuttingPatternData: <!--BLOC FORCEDENCODINGTYPE=0 -->«CUTTINGPATTERN_FULL_RESULT»<!--/BLOC-->,

    HardwareData: [
    <!--BLOCHARDWARE LOOPON=TYPEDOBJECT LOOPONCONDITION=((TOTYPES)CONTAINS"HARDWARE")AND(NOT(Exclude)) REPEAT=-1 ORDERBY=Name -->
        {	
            DataType: "Hardware",
            Name: "«Name»",
            SourceName: "«Name»-«Configuration»",
            Filepath: "«PATH»",
            Description: "«Description»",
            Configuration: "«Configuration»",
            Material: "«MAT»",
            MaterialId: "«MaterialId»",
            HardwareType: "«HardwareType»",
            Supplier: "«Supplier»",
            Reference: "«Reference»",
            Length: "«HardwareLength»",
            Quantity: «NB»,
            Weight: «MASS»,
            UnitCost: «Cost»,
            Purchased: «Purchased»,
            Image: "«IMGHARDWARE.DOC_REPORTRELATIVEURI»",
            ImageAbsoluteURI: "«IMGHARDWARE.DOC_ABSOLUTEURI»",
            ImageExists: Boolean(«IMGHARDWARE.DOC_FILEEXISTS»),
            PDFPath: "«PDF_HARDWARE.DOC_PATH»",
            PDFAbsoluteURI: "«PDF_HARDWARE.DOC_ABSOLUTEURI»",
            PDFRelativePath: "«PDF_HARDWARE.DOC_REPORTRELATIVEURI»",
            PDFExists: Boolean(«PDF_HARDWARE.DOC_FILEEXISTS»),
            //Hardware Custom Properties
            Hardware_STR_1: "«Hardware_STR_1»",
            Hardware_STR_2: "«Hardware_STR_2»",
            Hardware_STR_3: "«Hardware_STR_3»",
            Hardware_STR_4: "«Hardware_STR_4»",
            Hardware_STR_5: "«Hardware_STR_5»",
            Hardware_STR_6: "«Hardware_STR_6»",
            Hardware_STR_7: "«Hardware_STR_7»",
            Hardware_STR_8: "«Hardware_STR_8»",
            Hardware_STR_9: "«Hardware_STR_9»",
            Hardware_STR_10: "«Hardware_STR_10»",
            Hardware_BOO_1: Boolean(«Hardware_BOO_1»),
            Hardware_BOO_2: Boolean(«Hardware_BOO_2»),
            Hardware_BOO_3: Boolean(«Hardware_BOO_3»),
            Hardware_BOO_4: Boolean(«Hardware_BOO_4»),
            Hardware_BOO_5: Boolean(«Hardware_BOO_5»),
            Hardware_REA_1: «Hardware_REA_1»,
            Hardware_REA_2: «Hardware_REA_2»,
            Hardware_REA_3: «Hardware_REA_3»,
            Hardware_REA_4: «Hardware_REA_4»,
            Hardware_REA_5: «Hardware_REA_5»,
            Hardware_DIM_1: «Hardware_DIM_1»,
            Hardware_DIM_2: «Hardware_DIM_2»,
            Hardware_DIM_3: «Hardware_DIM_3»,
            Hardware_DIM_4: «Hardware_DIM_4»,
            Hardware_DIM_5: «Hardware_DIM_5»,
            Hardware_INT_1: «Hardware_INT_1»,
            Hardware_INT_2: «Hardware_INT_2»,
            Hardware_INT_3: «Hardware_INT_3»,
            Hardware_INT_4: «Hardware_INT_4»,
            Hardware_INT_5: «Hardware_INT_5»,
        },
    <!--/BLOCHARDWARE-->
    ],

    MaterialData: [
        <!--BLOCMAT LOOPON=MATERIAL REMOVEBLOCLINES=1 REPEAT=-1-->
        {
            <!--BLOCVAR LOOPON=VARIABLE LOOPONCONDITION=(VAR_PARENT="MATERIAL") REPEAT=-1 -->
            «VAR_ALIAS» : <!--BLOC CONDITION=(VAR_TYPE="I")OR(VAR_TYPE="R")OR(VAR_TYPE="D")OR(VAR_TYPE="B") -->«VAR_VALUE»<!--/BLOC--><!--BLOC CONDITION=(VAR_TYPE="O")OR(VAR_TYPE="S") -->"«VAR_VALUE»"<!--/BLOC-->,
            <!--/BLOCVAR-->
        },
        <!--/BLOCMAT-->
    ],

    EdgebandData: [
        <!--BLOCMAT LOOPON=EDGEBANDMATERIAL REPEAT=-1-->
        {
            <!--BLOCVAR LOOPON=VARIABLE LOOPONCONDITION=(VAR_PARENT="EDGEBANDMATERIAL") REPEAT=-1 -->
            «VAR_ALIAS» : <!--BLOC CONDITION=(VAR_TYPE="I")OR(VAR_TYPE="R")OR(VAR_TYPE="D")OR(VAR_TYPE="B") -->«VAR_VALUE»<!--/BLOC--><!--BLOC CONDITION=(VAR_TYPE="O")OR(VAR_TYPE="S") -->"«VAR_VALUE»"<!--/BLOC-->,
            <!--/BLOCVAR-->
        },
        <!--/BLOCMAT-->
    ],
        
    BoardData: [ 
    <!--BLOCCOST LOOPON=COSTING REPEAT=-1--><!--BLOCBOARD LOOPON=CUTTINGPATTERN_BOARD REPEAT=-1--><!--BLOCARTICLES LOOPON=ARTICLES REPEAT=-1-->
        {     
            CA_COST: «CA_COST»,
			CA_COUNT: «CA_COUNT»,
			CA_NAME: "«CA_NAME»",
			CA_QTY: «CA_QTY»,
			CA_QTYUNIT: "«CA_QTYUNIT»",
			CA_TYPE: "«CA_TYPE»",
			CA_UNITCOST: «CA_UNITCOST»,
        },
    <!--/BLOCARTICLES --><!--/BLOCBOARD --><!--/BLOCCOST -->
    ],

    ToolData: [
    <!--BLOCROW LOOPON=TOOL LOOPONCONDITION=(PROG<>"") ORDERBY=TOOL_NUMBER REPEAT=-1 -->
        {
            ToolName: "«TOOL_NAME»",
            ToolNumber: «TOOL_NUMBER»,
            ToolDiameter: «TOOL_DIAM»,
            ToolLength: «TOOL_LU»,
            SpindleTools: [
            <!--BLOCROW LOOPON=SPINDLE LOOPONCONDITION=(SPINDLE_USED)AND(PROG<>"") ORDERBY=SPINDLE_NUMBER REPEAT=-1 -->
                {
                    Name: "«TOOL_NAME»",
                    ToolName: "«SPINDLE_NAME»",
                    ToolNumber: «SPINDLE_NUMBER»,
                    ToolDiameter: «SPINDLE_DIAM»,
                    ToolLength: «SPINDLE_LU»,
                },
            <!--/BLOCROW-->
            ],
        },
    <!--/BLOCROW-->
        ],
    
    PageData: { 
        Home: {
            RelativeURI: "«Home.DOC_REPORTRELATIVEURI»?ProjectDB=" + encodeURIComponent("Database_«AssemblyName».js"),
            AbsoluteURI: "«Home.DOC_ABSOLUTEURI»",
            FileExists: Boolean(«Home.DOC_FILEEXISTS»),
        },
        Frames: {
            RelativeURI: "«WEB_REPORT_FRAMES.DOC_REPORTRELATIVEURI»?ProjectDB=" + encodeURIComponent("Database_«AssemblyName».js"),
            AbsoluteURI: "«WEB_REPORT_FRAMES.DOC_ABSOLUTEURI»",
            FileExists: Boolean(«WEB_REPORT_FRAMES.DOC_FILEEXISTS»),
        },
        FrameDetails: {
            RelativeURI: "«WEB_FRAME_DETAILS.DOC_REPORTRELATIVEURI»?ProjectDB=" + encodeURIComponent("Database_«AssemblyName».js"),
            AbsoluteURI: "«WEB_FRAME_DETAILS.DOC_ABSOLUTEURI»",
            FileExists: Boolean(«WEB_FRAME_DETAILS.DOC_FILEEXISTS»),
        },
        SubFrameDetails: {
            RelativeURI: "«WEB_SUBFRAME_DETAILS.DOC_REPORTRELATIVEURI»?ProjectDB=" + encodeURIComponent("Database_«AssemblyName».js"),
            AbsoluteURI: "«WEB_SUBFRAME_DETAILS.DOC_ABSOLUTEURI»",
            FileExists: Boolean(«WEB_SUBFRAME_DETAILS.DOC_FILEEXISTS»),
        },
        Panels: {
            RelativeURI: "«WEB_REPORT_PANELS.DOC_REPORTRELATIVEURI»?ProjectDB=" + encodeURIComponent("Database_«AssemblyName».js"),
            AbsoluteURI: "«WEB_REPORT_PANELS.DOC_ABSOLUTEURI»",
            FileExists: Boolean(«WEB_REPORT_PANELS.DOC_FILEEXISTS»),
        },
        PanelDetails: {
            RelativeURI: "«WEB_PANEL_DETAILS.DOC_REPORTRELATIVEURI»?ProjectDB=" + encodeURIComponent("Database_«AssemblyName».js"),
            AbsoluteURI: "«WEB_PANEL_DETAILS.DOC_ABSOLUTEURI»",
            FileExists: Boolean(«WEB_PANEL_DETAILS.DOC_FILEEXISTS»),
        },
        PanelDetailedList: {
            RelativeURI: "«WEB_REPORT_PANEL_DETAILED_LIST.DOC_REPORTRELATIVEURI»?ProjectDB=" + encodeURIComponent("Database_«AssemblyName».js"),
            AbsoluteURI: "«WEB_REPORT_PANEL_DETAILED_LIST.DOC_ABSOLUTEURI»",
            FileExists: Boolean(«WEB_REPORT_PANEL_DETAILED_LIST.DOC_FILEEXISTS»),
        },
        Stocks: {
            RelativeURI: "«WEB_REPORT_STOCKS.DOC_REPORTRELATIVEURI»?ProjectDB=" + encodeURIComponent("Database_«AssemblyName».js"),
            AbsoluteURI: "«WEB_REPORT_STOCKS.DOC_ABSOLUTEURI»",
            FileExists: Boolean(«WEB_REPORT_STOCKS.DOC_FILEEXISTS»),
        },
        Laminates: {
            RelativeURI: "«WEB_REPORT_LAMINATES.DOC_REPORTRELATIVEURI»?ProjectDB=" + encodeURIComponent("Database_«AssemblyName».js"),
            AbsoluteURI: "«WEB_REPORT_LAMINATES.DOC_ABSOLUTEURI»",
            FileExists: Boolean(«WEB_REPORT_LAMINATES.DOC_FILEEXISTS»),
        },
        Edgebands: {
            RelativeURI: "«WEB_REPORT_EDGEBANDS.DOC_REPORTRELATIVEURI»?ProjectDB=" + encodeURIComponent("Database_«AssemblyName».js"),
            AbsoluteURI: "«WEB_REPORT_EDGEBANDS.DOC_ABSOLUTEURI»",
            FileExists: Boolean(«WEB_REPORT_EDGEBANDS.DOC_FILEEXISTS»),
        },
        BeamSaw: {
            RelativeURI: "«WEB_REPORT_BEAM_SAW.DOC_REPORTRELATIVEURI»?ProjectDB=" + encodeURIComponent("Database_«AssemblyName».js"),
            AbsoluteURI: "«WEB_REPORT_BEAM_SAW.DOC_ABSOLUTEURI»",
            FileExists: Boolean(«WEB_REPORT_BEAM_SAW.DOC_FILEEXISTS»),
        },
        Weldments: {
            RelativeURI: "«WEB_REPORT_WELDMENTS.DOC_REPORTRELATIVEURI»?ProjectDB=" + encodeURIComponent("Database_«AssemblyName».js"),
            AbsoluteURI: "«WEB_REPORT_WELDMENTS.DOC_ABSOLUTEURI»",
            FileExists: Boolean(«WEB_REPORT_WELDMENTS.DOC_FILEEXISTS»),
        },
        Messages: {
            RelativeURI: "«WEB_REPORT_MESSAGES.DOC_REPORTRELATIVEURI»?ProjectDB=" + encodeURIComponent("Database_«AssemblyName».js"),
            AbsoluteURI: "«WEB_REPORT_MESSAGES.DOC_ABSOLUTEURI»",
            FileExists: Boolean(«WEB_REPORT_MESSAGES.DOC_FILEEXISTS»),
        },
        Programs: {
            RelativeURI: "«WEB_REPORT_PROGRAMS.DOC_REPORTRELATIVEURI»?ProjectDB=" + encodeURIComponent("Database_«AssemblyName».js"),
            AbsoluteURI: "«WEB_REPORT_PROGRAMS.DOC_ABSOLUTEURI»",
            FileExists: Boolean(«WEB_REPORT_PROGRAMS.DOC_FILEEXISTS»),
        },
        ProgramsDetails: {
            RelativeURI: "«WEB_PROGRAM_DETAILS.DOC_REPORTRELATIVEURI»?ProjectDB=" + encodeURIComponent("Database_«AssemblyName».js"),
            AbsoluteURI: "«WEB_PROGRAM_DETAILS.DOC_ABSOLUTEURI»",
            FileExists: Boolean(«WEB_PROGRAM_DETAILS.DOC_FILEEXISTS»),
        },
        ProgramsDetailedList: {
            RelativeURI: "«WEB_REPORT_PROGRAM_DETAILED_LIST.DOC_REPORTRELATIVEURI»?ProjectDB=" + encodeURIComponent("Database_«AssemblyName».js"),
            AbsoluteURI: "«WEB_REPORT_PROGRAM_DETAILED_LIST.DOC_ABSOLUTEURI»",
            FileExists: Boolean(«WEB_REPORT_PROGRAM_DETAILED_LIST.DOC_FILEEXISTS»),
        },
        ToolList: {
            RelativeURI: "«WEB_REPORT_TOOL_LIST.DOC_REPORTRELATIVEURI»?ProjectDB=" + encodeURIComponent("Database_«AssemblyName».js"),
            AbsoluteURI: "«WEB_REPORT_TOOL_LIST.DOC_ABSOLUTEURI»",
            FileExists: Boolean(«WEB_REPORT_TOOL_LIST.DOC_FILEEXISTS»),
        },
        Sheets: {
            RelativeURI: "«WEB_REPORT_SHEETS.DOC_REPORTRELATIVEURI»?ProjectDB=" + encodeURIComponent("Database_«AssemblyName».js"),
            AbsoluteURI: "«WEB_REPORT_SHEETS.DOC_ABSOLUTEURI»",
            FileExists: Boolean(«WEB_REPORT_SHEETS.DOC_FILEEXISTS»),
        },
        SheetDetails: {
            RelativeURI: "«WEB_REPORT_SHEETS_DETAILS.DOC_REPORTRELATIVEURI»?ProjectDB=" + encodeURIComponent("Database_«AssemblyName».js"),
            AbsoluteURI: "«WEB_REPORT_SHEETS_DETAILS.DOC_ABSOLUTEURI»",
            FileExists: Boolean(«WEB_REPORT_SHEETS_DETAILS.DOC_FILEEXISTS»),
        },
        SheetDetailedList: {
            RelativeURI: "«WEB_REPORT_SHEETS_DETAILED_LIST.DOC_REPORTRELATIVEURI»?ProjectDB=" + encodeURIComponent("Database_«AssemblyName».js"),
            AbsoluteURI: "«WEB_REPORT_SHEETS_DETAILED_LIST.DOC_ABSOLUTEURI»",
            FileExists: Boolean(«WEB_REPORT_SHEETS_DETAILED_LIST.DOC_FILEEXISTS»),
        },
        NestedPanels: {
            RelativeURI: "«WEB_REPORT_NESTED_PANELS.DOC_REPORTRELATIVEURI»?ProjectDB=" + encodeURIComponent("Database_«AssemblyName».js"),
            AbsoluteURI: "«WEB_REPORT_NESTED_PANELS.DOC_ABSOLUTEURI»",
            FileExists: Boolean(«WEB_REPORT_NESTED_PANELS.DOC_FILEEXISTS»),
        },
        CuttingPattern: {
            RelativeURI: "«WEB_REPORT_CUTTING_PATTERN.DOC_REPORTRELATIVEURI»?ProjectDB=" + encodeURIComponent("Database_«AssemblyName».js"),
            AbsoluteURI: "«WEB_REPORT_CUTTING_PATTERN.DOC_ABSOLUTEURI»",
            FileExists: Boolean(«WEB_REPORT_CUTTING_PATTERN.DOC_FILEEXISTS»),
        },
        CuttingPatternDetails: {
            RelativeURI: "«WEB_REPORT_CUTTING_PATTERN_DETAILS.DOC_REPORTRELATIVEURI»?ProjectDB=" + encodeURIComponent("Database_«AssemblyName».js"),
            AbsoluteURI: "«WEB_REPORT_CUTTING_PATTERN_DETAILS.DOC_ABSOLUTEURI»",
            FileExists: Boolean(«WEB_REPORT_CUTTING_PATTERN_DETAILS.DOC_FILEEXISTS»),
        },
        CuttingPatternDetailedList: {
            RelativeURI: "«WEB_REPORT_CUTTING_PATTERN_DETAILED_LIST.DOC_REPORTRELATIVEURI»?ProjectDB=" + encodeURIComponent("Database_«AssemblyName».js"),
            AbsoluteURI: "«WEB_REPORT_CUTTING_PATTERN_DETAILED_LIST.DOC_ABSOLUTEURI»",
            FileExists: Boolean(«WEB_REPORT_CUTTING_PATTERN_DETAILED_LIST.DOC_FILEEXISTS»),
        },
        Hardware: {
            RelativeURI: "«WEB_REPORT_HARDWARE.DOC_REPORTRELATIVEURI»?ProjectDB=" + encodeURIComponent("Database_«AssemblyName».js"),
            AbsoluteURI: "«WEB_REPORT_HARDWARE.DOC_ABSOLUTEURI»",
            FileExists: Boolean(«WEB_REPORT_HARDWARE.DOC_FILEEXISTS»),
        },
        Labels: {
            RelativeURI: "«HTML_LABELS.DOC_REPORTRELATIVEURI»?ProjectDB=" + encodeURIComponent("Database_«AssemblyName».js"),
            AbsoluteURI: "«HTML_LABELS.DOC_ABSOLUTEURI»",
            FileExists: Boolean(«HTML_LABELS.DOC_FILEEXISTS»),
        },
        LabelsFrames: {
            RelativeURI: "«HTML_LABELS_FRAMES.DOC_REPORTRELATIVEURI»?ProjectDB=" + encodeURIComponent("Database_«AssemblyName».js"),
            AbsoluteURI: "«HTML_LABELS_FRAMES.DOC_ABSOLUTEURI»",
            FileExists: Boolean(«HTML_LABELS_FRAMES.DOC_FILEEXISTS»),
        },
        LabelsBeamSaw: {
            RelativeURI: "«HTML_LABELS_BEAM_SAW.DOC_REPORTRELATIVEURI»?ProjectDB=" + encodeURIComponent("Database_«AssemblyName».js"),
            AbsoluteURI: "«HTML_LABELS_BEAM_SAW.DOC_ABSOLUTEURI»",
            FileExists: Boolean(«HTML_LABELS_BEAM_SAW.DOC_FILEEXISTS»),
        },
        Summary: {
            RelativeURI: "«WEB_REPORT_SUMMARY.DOC_REPORTRELATIVEURI»?ProjectDB=" + encodeURIComponent("Database_«AssemblyName».js"),
            AbsoluteURI: "«WEB_REPORT_SUMMARY.DOC_ABSOLUTEURI»",
            FileExists: Boolean(«WEB_REPORT_SUMMARY.DOC_FILEEXISTS»),
        },
        Excluded: {
            RelativeURI: "«WEB_REPORT_EXCLUDED.DOC_REPORTRELATIVEURI»?ProjectDB=" + encodeURIComponent("Database_«AssemblyName».js"),
            AbsoluteURI: "«WEB_REPORT_EXCLUDED.DOC_ABSOLUTEURI»",
            FileExists: Boolean(«WEB_REPORT_EXCLUDED.DOC_FILEEXISTS»),
        },
        PrintReport: {
            RelativeURI: "«WEB_PRINT_REPORT.DOC_REPORTRELATIVEURI»?ProjectDB=" + encodeURIComponent("Database_«AssemblyName».js"),
            AbsoluteURI: "«WEB_PRINT_REPORT.DOC_ABSOLUTEURI»",
            FileExists: Boolean(«WEB_PRINT_REPORT.DOC_FILEEXISTS»),
        },
        RawDataViewer: {
            RelativeURI: "«WEB_RAW_DATA_VIEWER.DOC_REPORTRELATIVEURI»?ProjectDB=" + encodeURIComponent("Database_«AssemblyName».js"),
            AbsoluteURI: "«WEB_RAW_DATA_VIEWER.DOC_ABSOLUTEURI»",
            FileExists: Boolean(«WEB_RAW_DATA_VIEWER.DOC_FILEEXISTS»),
        },
    },

    MessageData: [
        <!--BLOCMESSAGES LOOPON=MESSAGE REPEAT=-1 -->
        {Category: "Report", Name: "«Name»", Description: "«Description»", MessageType: "«MSG_TYPE»", Message: "«MSG_MSG»"},
        <!--/BLOCMESSAGES -->
        //Part message loop
        <!--BLOCPART LOOPON=PART REPEAT=-1  --><!--BLOCMESSAGES LOOPON=MESSAGE REPEAT=-1 -->
        {Category: "Part", Name: "«Name»", Description: "«Description»", MessageType: "«MSG_TYPE»", Message: "«MSG_MSG»"},
        <!--/BLOCMESSAGES --><!--/BLOCPART -->
        //Assembly message loop
        <!--BLOCASSY LOOPON=ASSEMBLY REPEAT=-1  --><!--BLOCMESSAGES LOOPON=MESSAGE REPEAT=-1 -->
        {Category: "Assembly", Name: "«Name»", Description: "«Description»", MessageType: "«MSG_TYPE»", Message: "«MSG_MSG»"},
        <!--/BLOCMESSAGES --><!--/BLOCASSY -->
        //Panel message loop
        <!--BLOCPANEL LOOPON=PANEL LOOPONCONDITION=NOT(Exclude) REPEAT=-1  --><!--BLOCMESSAGES REPEAT=-1 LOOPON=MESSAGE-->
        {Category: "Panel", Name: "«Name»", Description: "«Description»", MessageType: "«MSG_TYPE»", Message: "«MSG_MSG»", ItemLink: "«WEB_PANEL_DETAILS.DOC_REPORTRELATIVEURI»?Name=" + encodeURIComponent("«Name»-«Configuration»") + "&Image=" + encodeURIComponent("«IMGPANELVIEWS.DOC_REPORTRELATIVEURI»"), },
        <!--/BLOCMESSAGES --><!--/BLOCPANEL -->
        //Stock message loop
        <!--BLOCSTOCK LOOPON=STOCK LOOPONCONDITION=NOT(MULTIBODYPART) REPEAT=-1  --><!--BLOCMESSAGES LOOPON=MESSAGE REPEAT=-1 -->
        {Category: "Stock", Name: "«Name»", Description: "«Description»", MessageType: "«MSG_TYPE»", Message: "«MSG_MSG»", ItemLink: "«WEB_PANEL_DETAILS.DOC_REPORTRELATIVEURI»?Name=" + encodeURIComponent("«Name»-«Configuration»") + "&Image=" + encodeURIComponent("«IMGPANELVIEWS.DOC_REPORTRELATIVEURI»"), }, 
            <!--/BLOCMESSAGES --><!--/BLOCSTOCK -->
        //Multibody message loop
        <!--BLOCSTOCK LOOPON=STOCK LOOPONCONDITION=MULTIBODYPART REPEAT=-1  --><!--BLOCMESSAGES LOOPON=MESSAGE REPEAT=-1  -->
        {Category: "Stock", Name: "«Name»", Description: "«Description»", MessageType: "«MSG_TYPE»", Message: "«MSG_MSG»", ItemLink: "«WEB_PANEL_DETAILS.DOC_REPORTRELATIVEURI»?Name="+ encodeURIComponent("«Name»-«MBS_Cutlist»-«ST_N»-«Configuration»") + "&Image=" + encodeURIComponent("«IMGMULTIBODYPANEL»"),},
        <!--/BLOCMESSAGES --><!--/BLOCSTOCK -->
        //Program message loop
        <!--BLOCPROGRAM LOOPON=PROGRAM LOOPONCONDITION=(PROGTYPE<>2) REPEAT=-1 --><!--BLOCMESSAGES LOOPON=MESSAGE REPEAT=-1 -->
        {Category: "Program", Name: "«Name»", Description: "«Description»", MessageType: "«MSG_TYPE»", Message: "«MSG_MSG»", ItemLink: "«WEB_PROGRAM_DETAILS.DOC_REPORTRELATIVEURI»?Name=" + encodeURIComponent("«Name»-«PROG»-«Configuration»") + "&Image=" + encodeURIComponent("«IMGPANELVIEWS.DOC_REPORTRELATIVEURI»"),},
        <!--/BLOCMESSAGES --><!--/BLOCPROGRAM -->
        //Nesting message loop
        <!--BLOCPROGRAM LOOPON=PROGRAM LOOPONCONDITION=(PROGTYPE=2) REPEAT=-1 --><!--BLOCMESSAGES LOOPON=MESSAGE REPEAT=-1 -->
        {Category: "Program", Name: "«Name»", Description: "«Description»", MessageType: "«MSG_TYPE»", Message: "«MSG_MSG»", ItemLink: "«WEB_PROGRAM_DETAILS.DOC_REPORTRELATIVEURI»?Name=" + encodeURIComponent("«Name»-«PROG»-«Configuration»") + "&Image=" + encodeURIComponent("«IMGPANELVIEWS.DOC_REPORTRELATIVEURI»"),},
        <!--/BLOCMESSAGES --><!--/BLOCPROGRAM -->
        //Nesting parts message loop
        <!--BLOCROW LOOPON=PROGRAM LOOPONCONDITION=(PROGTYPE=2) REPEAT=-1 --><!--BLOCNESTING LOOPON=PROGRAMPART REPEAT=-1  --><!--BLOCMESSAGES LOOPON=MESSAGE REPEAT=-1 ORDERBY«MSG_TYPE|MSG_MSG -->
        {Category: "Nest", Name: "«Name»", Description: "«Description»", MessageType: "«MSG_TYPE»", Message: "«MSG_MSG»", ItemLink: "«WEB_REPORT_SHEETS_DETAILS.DOC_REPORTRELATIVEURI»?Name=" + encodeURIComponent("«PROG»") + "&Image=" + encodeURIComponent("«IMGPROGRAMNEST.DOC_REPORTRELATIVEURI»"),},
        <!--/BLOCMESSAGES --><!--/BLOCNESTING --><!--/BLOCROW-->
        //Edgeband message loop 
        <!--BLOCEB LOOPON=EDGEBAND REPEAT=-1 --><!--BLOCMESSAGES LOOPON=MESSAGE REPEAT=-1 -->
        {Category: "Edgeband", Name: "«Name»", Description: "«Description»", MessageType: "«MSG_TYPE»", Message: "«MSG_MSG»"},
        <!--/BLOCMESSAGES --><!--/BLOCEB -->
    ],

    ExcludedData: [
    <!--BLOCEXCLUDED LOOPON=TYPEDOBJECT LOOPONCONDITION=((TOTYPES)CONTAINS"EXCLUDED") REPEAT=-1 ORDERBY=Name -->
        {
            Name: "«Name»",
            Description: "«Description»",
            Configuration: "«Configuration»",
        },   
    <!--/BLOCEXCLUDED-->
    ],

    MergedData: [

    ]
}

try {
	module.exports = { ReportDatabase }
} catch {}